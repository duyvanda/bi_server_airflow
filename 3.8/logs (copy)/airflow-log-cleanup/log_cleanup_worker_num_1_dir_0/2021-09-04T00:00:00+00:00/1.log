[2021-09-05 13:16:30,736] {taskinstance.py:903} INFO - Dependencies all met for <TaskInstance: airflow-log-cleanup.log_cleanup_worker_num_1_dir_0 2021-09-04T00:00:00+00:00 [queued]>
[2021-09-05 13:16:30,752] {taskinstance.py:903} INFO - Dependencies all met for <TaskInstance: airflow-log-cleanup.log_cleanup_worker_num_1_dir_0 2021-09-04T00:00:00+00:00 [queued]>
[2021-09-05 13:16:30,752] {taskinstance.py:1094} INFO - 
--------------------------------------------------------------------------------
[2021-09-05 13:16:30,752] {taskinstance.py:1095} INFO - Starting attempt 1 of 2
[2021-09-05 13:16:30,752] {taskinstance.py:1096} INFO - 
--------------------------------------------------------------------------------
[2021-09-05 13:16:30,772] {taskinstance.py:1114} INFO - Executing <Task(BashOperator): log_cleanup_worker_num_1_dir_0> on 2021-09-04T00:00:00+00:00
[2021-09-05 13:16:30,781] {standard_task_runner.py:52} INFO - Started process 5026 to run task
[2021-09-05 13:16:30,783] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'airflow-log-cleanup', 'log_cleanup_worker_num_1_dir_0', '2021-09-04T00:00:00+00:00', '--job-id', '228', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/airflow-log-cleanup.py', '--cfg-path', '/tmp/tmp46qgimfb', '--error-file', '/tmp/tmpxbyhdjuj']
[2021-09-05 13:16:30,784] {standard_task_runner.py:77} INFO - Job 228: Subtask log_cleanup_worker_num_1_dir_0
[2021-09-05 13:16:30,819] {logging_mixin.py:109} INFO - Running <TaskInstance: airflow-log-cleanup.log_cleanup_worker_num_1_dir_0 2021-09-04T00:00:00+00:00 [running]> on host 2bce3265bb98
[2021-09-05 13:16:30,865] {taskinstance.py:1251} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=operations
AIRFLOW_CTX_DAG_ID=airflow-log-cleanup
AIRFLOW_CTX_TASK_ID=log_cleanup_worker_num_1_dir_0
AIRFLOW_CTX_EXECUTION_DATE=2021-09-04T00:00:00+00:00
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2021-09-04T00:00:00+00:00
[2021-09-05 13:16:30,865] {subprocess.py:52} INFO - Tmp dir root location: 
 /tmp
[2021-09-05 13:16:30,866] {subprocess.py:63} INFO - Running command: ['bash', '-c', '\n\necho "Getting Configurations..."\nBASE_LOG_FOLDER="/usr/local/airflow/logs"\nWORKER_SLEEP_TIME="3"\n\nsleep ${WORKER_SLEEP_TIME}s\n\nMAX_LOG_AGE_IN_DAYS=""\nif [ "${MAX_LOG_AGE_IN_DAYS}" == "" ]; then\n    echo "maxLogAgeInDays conf variable isn\'t included. Using Default \'1\'."\n    MAX_LOG_AGE_IN_DAYS=\'1\'\nfi\nENABLE_DELETE=true\necho "Finished Getting Configurations"\necho ""\n\necho "Configurations:"\necho "BASE_LOG_FOLDER:      \'${BASE_LOG_FOLDER}\'"\necho "MAX_LOG_AGE_IN_DAYS:  \'${MAX_LOG_AGE_IN_DAYS}\'"\necho "ENABLE_DELETE:        \'${ENABLE_DELETE}\'"\n\ncleanup() {\n    echo "Executing Find Statement: $1"\n    FILES_MARKED_FOR_DELETE=`eval $1`\n    echo "Process will be Deleting the following File(s)/Directory(s):"\n    echo "${FILES_MARKED_FOR_DELETE}"\n    echo "Process will be Deleting `echo "${FILES_MARKED_FOR_DELETE}" |     grep -v \'^$\' | wc -l` File(s)/Directory(s)"         # "grep -v \'^$\'" - removes empty lines.\n    # "wc -l" - Counts the number of lines\n    echo ""\n    if [ "${ENABLE_DELETE}" == "true" ];\n    then\n        if [ "${FILES_MARKED_FOR_DELETE}" != "" ];\n        then\n            echo "Executing Delete Statement: $2"\n            eval $2\n            DELETE_STMT_EXIT_CODE=$?\n            if [ "${DELETE_STMT_EXIT_CODE}" != "0" ]; then\n                echo "Delete process failed with exit code                     \'${DELETE_STMT_EXIT_CODE}\'"\n\n                echo "Removing lock file..."\n                rm -f /tmp/airflow_log_cleanup_worker.lock\n                if [ "${REMOVE_LOCK_FILE_EXIT_CODE}" != "0" ]; then\n                    echo "Error removing the lock file.                     Check file permissions.                    To re-run the DAG, ensure that the lock file has been                     deleted (/tmp/airflow_log_cleanup_worker.lock)."\n                    exit ${REMOVE_LOCK_FILE_EXIT_CODE}\n                fi\n                exit ${DELETE_STMT_EXIT_CODE}\n            fi\n        else\n            echo "WARN: No File(s)/Directory(s) to Delete"\n        fi\n    else\n        echo "WARN: You\'re opted to skip deleting the File(s)/Directory(s)!!!"\n    fi\n}\n\n\nif [ ! -f /tmp/airflow_log_cleanup_worker.lock ]; then\n\n    echo "Lock file not found on this node!     Creating it to prevent collisions..."\n    touch /tmp/airflow_log_cleanup_worker.lock\n    CREATE_LOCK_FILE_EXIT_CODE=$?\n    if [ "${CREATE_LOCK_FILE_EXIT_CODE}" != "0" ]; then\n        echo "Error creating the lock file.         Check if the airflow user can create files under tmp directory.         Exiting..."\n        exit ${CREATE_LOCK_FILE_EXIT_CODE}\n    fi\n\n    echo ""\n    echo "Running Cleanup Process..."\n\n    FIND_STATEMENT="find ${BASE_LOG_FOLDER}/*/* -type f -mtime      +${MAX_LOG_AGE_IN_DAYS}"\n    DELETE_STMT="${FIND_STATEMENT} -exec rm -f {} \\;"\n\n    cleanup "${FIND_STATEMENT}" "${DELETE_STMT}"\n    CLEANUP_EXIT_CODE=$?\n\n    FIND_STATEMENT="find ${BASE_LOG_FOLDER}/*/* -type d -empty"\n    DELETE_STMT="${FIND_STATEMENT} -prune -exec rm -rf {} \\;"\n\n    cleanup "${FIND_STATEMENT}" "${DELETE_STMT}"\n    CLEANUP_EXIT_CODE=$?\n\n    FIND_STATEMENT="find ${BASE_LOG_FOLDER}/* -type d -empty"\n    DELETE_STMT="${FIND_STATEMENT} -prune -exec rm -rf {} \\;"\n\n    cleanup "${FIND_STATEMENT}" "${DELETE_STMT}"\n    CLEANUP_EXIT_CODE=$?\n\n    echo "Finished Running Cleanup Process"\n\n    echo "Deleting lock file..."\n    rm -f /tmp/airflow_log_cleanup_worker.lock\n    REMOVE_LOCK_FILE_EXIT_CODE=$?\n    if [ "${REMOVE_LOCK_FILE_EXIT_CODE}" != "0" ]; then\n        echo "Error removing the lock file. Check file permissions. To re-run the DAG, ensure that the lock file has been deleted (/tmp/airflow_log_cleanup_worker.lock)."\n        exit ${REMOVE_LOCK_FILE_EXIT_CODE}\n    fi\n\nelse\n    echo "Another task is already deleting logs on this worker node.     Skipping it!"\n    echo "If you believe you\'re receiving this message in error, kindly check     if /tmp/airflow_log_cleanup_worker.lock exists and delete it."\n    exit 0\nfi\n']
[2021-09-05 13:16:30,871] {subprocess.py:74} INFO - Output:
[2021-09-05 13:16:30,873] {subprocess.py:78} INFO - Getting Configurations...
[2021-09-05 13:16:33,874] {subprocess.py:78} INFO - maxLogAgeInDays conf variable isn't included. Using Default '1'.
[2021-09-05 13:16:33,874] {subprocess.py:78} INFO - Finished Getting Configurations
[2021-09-05 13:16:33,874] {subprocess.py:78} INFO - 
[2021-09-05 13:16:33,874] {subprocess.py:78} INFO - Configurations:
[2021-09-05 13:16:33,874] {subprocess.py:78} INFO - BASE_LOG_FOLDER:      '/usr/local/airflow/logs'
[2021-09-05 13:16:33,874] {subprocess.py:78} INFO - MAX_LOG_AGE_IN_DAYS:  '1'
[2021-09-05 13:16:33,874] {subprocess.py:78} INFO - ENABLE_DELETE:        'true'
[2021-09-05 13:16:33,875] {subprocess.py:78} INFO - Another task is already deleting logs on this worker node.     Skipping it!
[2021-09-05 13:16:33,875] {subprocess.py:78} INFO - If you believe you're receiving this message in error, kindly check     if /tmp/airflow_log_cleanup_worker.lock exists and delete it.
[2021-09-05 13:16:33,875] {subprocess.py:82} INFO - Command exited with return code 0
[2021-09-05 13:16:33,899] {taskinstance.py:1211} INFO - Marking task as SUCCESS. dag_id=airflow-log-cleanup, task_id=log_cleanup_worker_num_1_dir_0, execution_date=20210904T000000, start_date=20210905T131630, end_date=20210905T131633
[2021-09-05 13:16:33,928] {local_task_job.py:151} INFO - Task exited with return code 0
[2021-09-05 13:16:33,946] {local_task_job.py:261} INFO - 0 downstream tasks scheduled from follow-on schedule check
