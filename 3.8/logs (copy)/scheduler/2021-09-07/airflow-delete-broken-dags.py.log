[2021-09-07 10:34:52,752] {processor.py:162} INFO - Started process (PID=221) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 10:34:52,752] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 10:34:52,753] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,753] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 10:34:52,760] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 10:34:52,768] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,768] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 10:34:52,780] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,780] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 10:34:52,788] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.038 seconds
[2021-09-07 16:42:47,629] {processor.py:162} INFO - Started process (PID=221) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:42:47,630] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:42:47,631] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,631] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:42:47,638] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:42:47,651] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,651] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:42:47,662] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,662] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:42:47,669] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.044 seconds
[2021-09-07 16:43:18,246] {processor.py:162} INFO - Started process (PID=335) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:43:18,246] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:43:18,246] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,246] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:43:18,254] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:43:18,266] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,266] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:18,278] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,278] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:43:18,286] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.042 seconds
[2021-09-07 16:43:48,858] {processor.py:162} INFO - Started process (PID=401) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:43:48,859] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:43:48,859] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,859] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:43:48,867] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:43:48,882] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,882] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:48,893] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,893] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:43:48,900] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.044 seconds
[2021-09-07 16:44:19,508] {processor.py:162} INFO - Started process (PID=468) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:44:19,509] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:44:19,510] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,509] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:44:19,517] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:44:19,530] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,530] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:19,542] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,542] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:44:19,550] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.043 seconds
[2021-09-07 16:44:50,122] {processor.py:162} INFO - Started process (PID=534) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:44:50,122] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:44:50,123] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,123] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:44:50,131] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:44:50,145] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,145] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:50,157] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,157] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:44:50,164] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.044 seconds
[2021-09-07 16:45:20,767] {processor.py:162} INFO - Started process (PID=601) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:45:20,768] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:45:20,769] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,769] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:45:20,776] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:45:20,790] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,790] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:20,803] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,803] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:45:20,810] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.045 seconds
[2021-09-07 16:45:51,446] {processor.py:162} INFO - Started process (PID=668) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:45:51,448] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:45:51,449] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,449] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:45:51,465] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:45:51,490] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,490] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:51,517] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,516] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:45:51,537] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.095 seconds
[2021-09-07 16:46:22,390] {processor.py:162} INFO - Started process (PID=736) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:46:22,390] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:46:22,391] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,391] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:46:22,398] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:46:22,413] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,413] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:22,428] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,428] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:46:22,439] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.051 seconds
[2021-09-07 16:46:53,025] {processor.py:162} INFO - Started process (PID=800) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:46:53,025] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:46:53,026] {logging_mixin.py:109} INFO - [2021-09-07 16:46:53,026] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:46:53,033] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:46:53,047] {logging_mixin.py:109} INFO - [2021-09-07 16:46:53,047] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:53,058] {logging_mixin.py:109} INFO - [2021-09-07 16:46:53,058] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:46:53,065] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.042 seconds
[2021-09-07 16:47:23,673] {processor.py:162} INFO - Started process (PID=866) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:47:23,674] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:47:23,675] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,674] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:47:23,683] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:47:23,696] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,696] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:23,708] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,708] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:47:23,715] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.043 seconds
[2021-09-07 16:47:54,338] {processor.py:162} INFO - Started process (PID=932) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:47:54,339] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:47:54,340] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,340] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:47:54,348] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:47:54,361] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,361] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:54,373] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,373] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:47:54,380] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.043 seconds
[2021-09-07 16:48:24,976] {processor.py:162} INFO - Started process (PID=998) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:48:24,977] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:48:24,977] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,977] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:48:24,984] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:48:24,996] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,996] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:25,007] {logging_mixin.py:109} INFO - [2021-09-07 16:48:25,006] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:48:25,013] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.039 seconds
[2021-09-07 16:48:55,610] {processor.py:162} INFO - Started process (PID=1064) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:48:55,611] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:48:55,611] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,611] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:48:55,618] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:48:55,630] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,630] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:55,643] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,643] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:48:55,652] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.044 seconds
[2021-09-07 16:49:26,292] {processor.py:162} INFO - Started process (PID=1130) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:49:26,293] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:49:26,294] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,293] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:49:26,301] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:49:26,314] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,314] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:26,326] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,326] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:49:26,334] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.043 seconds
[2021-09-07 16:49:56,889] {processor.py:162} INFO - Started process (PID=1196) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:49:56,889] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:49:56,890] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,890] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:49:56,897] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:49:56,911] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,911] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:56,929] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,929] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:49:56,938] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.051 seconds
[2021-09-07 16:50:27,551] {processor.py:162} INFO - Started process (PID=1262) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:50:27,552] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:50:27,552] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,552] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:50:27,560] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:50:27,573] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,572] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:27,585] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,585] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:50:27,592] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.043 seconds
[2021-09-07 16:50:58,212] {processor.py:162} INFO - Started process (PID=1331) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:50:58,213] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:50:58,213] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,213] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:50:58,221] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:50:58,235] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,235] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:58,247] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,247] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:50:58,255] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.045 seconds
[2021-09-07 16:51:28,844] {processor.py:162} INFO - Started process (PID=1396) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:51:28,845] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:51:28,845] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,845] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:51:28,852] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:51:28,866] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,866] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:28,885] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,885] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:51:28,894] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.052 seconds
[2021-09-07 16:51:59,455] {processor.py:162} INFO - Started process (PID=1462) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:51:59,456] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:51:59,456] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,456] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:51:59,467] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:51:59,481] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,481] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:59,495] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,494] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:51:59,504] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.052 seconds
[2021-09-07 16:52:30,074] {processor.py:162} INFO - Started process (PID=1529) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:52:30,075] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:52:30,075] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,075] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:52:30,083] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:52:30,097] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,097] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:52:30,111] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,111] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:52:30,119] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.047 seconds
[2021-09-07 16:53:00,704] {processor.py:162} INFO - Started process (PID=1595) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:53:00,704] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:53:00,705] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,705] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:53:00,712] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:53:00,725] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,725] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:00,736] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,736] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:53:00,743] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.041 seconds
[2021-09-07 16:53:31,313] {processor.py:162} INFO - Started process (PID=1662) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:53:31,314] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:53:31,314] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,314] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:53:31,322] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:53:31,334] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,334] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:31,346] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,346] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:53:31,353] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.042 seconds
[2021-09-07 16:54:01,923] {processor.py:162} INFO - Started process (PID=1729) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:54:01,924] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:54:01,924] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,924] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:54:01,932] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:54:01,945] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,944] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:01,959] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,958] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:54:01,966] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.045 seconds
[2021-09-07 16:54:32,523] {processor.py:162} INFO - Started process (PID=1795) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:54:32,524] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:54:32,524] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,524] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:54:32,532] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:54:32,547] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,546] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:32,563] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,563] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:54:32,573] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.051 seconds
[2021-09-07 16:55:03,197] {processor.py:162} INFO - Started process (PID=1863) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:55:03,198] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:55:03,198] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,198] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:55:03,209] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:55:03,225] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,225] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:03,236] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,236] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:55:03,243] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.049 seconds
[2021-09-07 16:55:33,877] {processor.py:162} INFO - Started process (PID=1928) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:55:33,878] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:55:33,878] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,878] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:55:33,886] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:55:33,899] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,899] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:33,912] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,912] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:55:33,919] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.044 seconds
[2021-09-07 16:56:04,487] {processor.py:162} INFO - Started process (PID=1994) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:56:04,488] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:56:04,488] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,488] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:56:04,496] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:56:04,508] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,508] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:04,520] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,519] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:56:04,527] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.041 seconds
[2021-09-07 16:56:35,115] {processor.py:162} INFO - Started process (PID=2060) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:56:35,115] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:56:35,116] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,116] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:56:35,123] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:56:35,138] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,138] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:35,154] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,153] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:56:35,164] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.051 seconds
[2021-09-07 16:57:05,784] {processor.py:162} INFO - Started process (PID=2126) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:57:05,785] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:57:05,785] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,785] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:57:05,793] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:57:05,808] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,808] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:05,820] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,820] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:57:05,827] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.045 seconds
[2021-09-07 16:57:36,407] {processor.py:162} INFO - Started process (PID=2192) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:57:36,407] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:57:36,408] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,408] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:57:36,415] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:57:36,431] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,431] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:36,445] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,445] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:57:36,452] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.048 seconds
[2021-09-07 16:58:07,082] {processor.py:162} INFO - Started process (PID=2258) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:58:07,083] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:58:07,084] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,083] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:58:07,092] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:58:07,106] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,105] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:07,117] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,117] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:58:07,123] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.043 seconds
[2021-09-07 16:58:37,946] {processor.py:162} INFO - Started process (PID=2324) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:58:37,946] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:58:37,947] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,947] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:58:37,959] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:58:37,977] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,977] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:37,993] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,993] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:58:38,006] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.062 seconds
[2021-09-07 16:59:08,633] {processor.py:162} INFO - Started process (PID=2390) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:59:08,633] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:59:08,634] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,633] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:59:08,641] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:59:08,654] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,654] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:08,665] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,665] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:59:08,672] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.041 seconds
[2021-09-07 16:59:39,309] {processor.py:162} INFO - Started process (PID=2458) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:59:39,309] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 16:59:39,310] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,310] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:59:39,318] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 16:59:39,331] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,331] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:39,342] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,342] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:59:39,349] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.042 seconds
[2021-09-07 17:00:09,954] {processor.py:162} INFO - Started process (PID=2522) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:00:09,955] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:00:09,956] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,956] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:00:09,964] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:00:09,978] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,978] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:09,993] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,993] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:00:10,002] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.049 seconds
[2021-09-07 17:00:40,626] {processor.py:162} INFO - Started process (PID=2588) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:00:40,626] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:00:40,627] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,627] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:00:40,635] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:00:40,647] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,647] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:40,660] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,660] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:00:40,668] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.044 seconds
[2021-09-07 17:01:11,295] {processor.py:162} INFO - Started process (PID=2654) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:01:11,296] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:01:11,296] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,296] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:01:11,304] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:01:11,316] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,316] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:11,331] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,331] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:01:11,340] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.047 seconds
[2021-09-07 17:01:42,002] {processor.py:162} INFO - Started process (PID=2721) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:01:42,003] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:01:42,004] {logging_mixin.py:109} INFO - [2021-09-07 17:01:42,004] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:01:42,021] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:01:42,046] {logging_mixin.py:109} INFO - [2021-09-07 17:01:42,046] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:42,064] {logging_mixin.py:109} INFO - [2021-09-07 17:01:42,064] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:01:42,074] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.076 seconds
[2021-09-07 17:02:12,674] {processor.py:162} INFO - Started process (PID=2788) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:02:12,675] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:02:12,675] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,675] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:02:12,682] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:02:12,695] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,695] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:12,705] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,705] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:02:12,712] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.040 seconds
[2021-09-07 17:02:43,467] {processor.py:162} INFO - Started process (PID=2852) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:02:43,468] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:02:43,468] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,468] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:02:43,480] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:02:43,501] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,501] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:43,523] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,523] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:02:43,538] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.073 seconds
[2021-09-07 17:03:14,428] {processor.py:162} INFO - Started process (PID=2918) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:03:14,429] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:03:14,429] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,429] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:03:14,438] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:03:14,453] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,453] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:14,467] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,467] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:03:14,476] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.051 seconds
[2021-09-07 17:03:45,307] {processor.py:162} INFO - Started process (PID=2984) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:03:45,308] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:03:45,308] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,308] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:03:45,320] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:03:45,337] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,337] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:45,354] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,354] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:03:45,365] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.060 seconds
[2021-09-07 17:04:16,028] {processor.py:162} INFO - Started process (PID=3051) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:04:16,029] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:04:16,029] {logging_mixin.py:109} INFO - [2021-09-07 17:04:16,029] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:04:16,037] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:04:16,051] {logging_mixin.py:109} INFO - [2021-09-07 17:04:16,051] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:16,064] {logging_mixin.py:109} INFO - [2021-09-07 17:04:16,064] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:04:16,073] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.047 seconds
[2021-09-07 17:04:46,783] {processor.py:162} INFO - Started process (PID=3117) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:04:46,784] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:04:46,784] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,784] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:04:46,792] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:04:46,806] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,806] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:46,819] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,819] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:04:46,828] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.046 seconds
[2021-09-07 17:05:17,497] {processor.py:162} INFO - Started process (PID=3186) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:05:17,498] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:05:17,498] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,498] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:05:17,506] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:05:17,518] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,518] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:05:17,532] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,532] {dag.py:2306} INFO - Setting next_dagrun for airflow-delete-broken-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:05:17,539] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-delete-broken-dags.py took 0.044 seconds
[2021-09-07 17:05:50,199] {processor.py:162} INFO - Started process (PID=3257) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:05:50,201] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:05:50,201] {logging_mixin.py:109} INFO - [2021-09-07 17:05:50,201] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:05:50,215] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:05:50,647] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:21,623] {processor.py:162} INFO - Started process (PID=3323) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:06:21,624] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:06:21,625] {logging_mixin.py:109} INFO - [2021-09-07 17:06:21,624] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:06:21,635] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:06:22,437] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:53,094] {processor.py:162} INFO - Started process (PID=3389) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:06:53,095] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:06:53,095] {logging_mixin.py:109} INFO - [2021-09-07 17:06:53,095] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:06:53,104] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:06:53,992] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:24,427] {processor.py:162} INFO - Started process (PID=3457) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:07:24,429] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:07:24,429] {logging_mixin.py:109} INFO - [2021-09-07 17:07:24,429] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:07:24,444] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:07:25,716] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:56,309] {processor.py:162} INFO - Started process (PID=3523) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:07:56,310] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:07:56,311] {logging_mixin.py:109} INFO - [2021-09-07 17:07:56,310] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:07:56,325] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:07:57,185] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:27,266] {processor.py:162} INFO - Started process (PID=3587) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:08:27,267] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:08:27,268] {logging_mixin.py:109} INFO - [2021-09-07 17:08:27,267] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:08:27,279] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:08:28,067] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:58,516] {processor.py:162} INFO - Started process (PID=3654) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:08:58,518] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:08:58,519] {logging_mixin.py:109} INFO - [2021-09-07 17:08:58,519] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:08:58,534] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:08:58,604] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:29,074] {processor.py:162} INFO - Started process (PID=3715) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:09:29,075] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:09:29,076] {logging_mixin.py:109} INFO - [2021-09-07 17:09:29,076] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:09:29,084] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:09:29,648] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:00,735] {processor.py:162} INFO - Started process (PID=3786) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:10:00,736] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:10:00,736] {logging_mixin.py:109} INFO - [2021-09-07 17:10:00,736] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:10:00,748] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:10:01,787] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:32,492] {processor.py:162} INFO - Started process (PID=3852) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:10:32,494] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:10:32,494] {logging_mixin.py:109} INFO - [2021-09-07 17:10:32,494] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:10:32,506] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:10:33,534] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:04,035] {processor.py:162} INFO - Started process (PID=3923) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:11:04,037] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:11:04,037] {logging_mixin.py:109} INFO - [2021-09-07 17:11:04,037] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:11:04,050] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:11:04,688] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:35,115] {processor.py:162} INFO - Started process (PID=3989) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:11:35,116] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:11:35,117] {logging_mixin.py:109} INFO - [2021-09-07 17:11:35,117] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:11:35,127] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:11:35,418] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:06,327] {processor.py:162} INFO - Started process (PID=4055) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:12:06,328] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:12:06,328] {logging_mixin.py:109} INFO - [2021-09-07 17:12:06,328] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:12:06,339] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:12:07,514] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:38,341] {processor.py:162} INFO - Started process (PID=4123) to work on /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:12:38,342] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-delete-broken-dags.py for tasks to queue
[2021-09-07 17:12:38,342] {logging_mixin.py:109} INFO - [2021-09-07 17:12:38,342] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:12:38,354] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-delete-broken-dags']) retrieved from /usr/local/airflow/dags/airflow-delete-broken-dags.py
[2021-09-07 17:12:39,655] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
