[2021-09-07 10:34:52,740] {processor.py:162} INFO - Started process (PID=216) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 10:34:52,740] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 10:34:52,741] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,741] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 10:34:52,749] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 10:34:52,757] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,757] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 10:34:52,769] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,769] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 10:34:52,775] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.037 seconds
[2021-09-07 16:42:47,587] {processor.py:162} INFO - Started process (PID=216) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:42:47,587] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:42:47,587] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,587] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:42:47,594] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:42:47,607] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,607] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:42:47,619] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,618] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:42:47,626] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:43:18,237] {processor.py:162} INFO - Started process (PID=330) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:43:18,237] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:43:18,238] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,238] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:43:18,245] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:43:18,257] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,257] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:18,270] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,270] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:43:18,276] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:43:48,851] {processor.py:162} INFO - Started process (PID=396) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:43:48,851] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:43:48,852] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,852] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:43:48,860] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:43:48,874] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,874] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:48,887] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,887] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:43:48,894] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.045 seconds
[2021-09-07 16:44:19,461] {processor.py:162} INFO - Started process (PID=463) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:44:19,461] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:44:19,462] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,462] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:44:19,469] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:44:19,480] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,480] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:19,491] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,491] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:44:19,497] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.038 seconds
[2021-09-07 16:44:50,083] {processor.py:162} INFO - Started process (PID=529) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:44:50,083] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:44:50,084] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,084] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:44:50,091] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:44:50,103] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,103] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:50,116] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,116] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:44:50,123] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:45:20,735] {processor.py:162} INFO - Started process (PID=596) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:45:20,736] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:45:20,736] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,736] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:45:20,744] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:45:20,758] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,758] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:20,771] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,771] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:45:20,778] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.046 seconds
[2021-09-07 16:45:51,400] {processor.py:162} INFO - Started process (PID=663) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:45:51,400] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:45:51,401] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,401] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:45:51,412] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:45:51,433] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,433] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:51,456] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,456] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:45:51,469] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.072 seconds
[2021-09-07 16:46:22,326] {processor.py:162} INFO - Started process (PID=729) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:46:22,327] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:46:22,327] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,327] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:46:22,336] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:46:22,354] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,353] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:22,373] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,373] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:46:22,383] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.059 seconds
[2021-09-07 16:46:53,005] {processor.py:162} INFO - Started process (PID=795) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:46:53,006] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:46:53,006] {logging_mixin.py:109} INFO - [2021-09-07 16:46:53,006] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:46:53,013] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:46:53,027] {logging_mixin.py:109} INFO - [2021-09-07 16:46:53,027] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:53,039] {logging_mixin.py:109} INFO - [2021-09-07 16:46:53,039] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:46:53,045] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:47:23,621] {processor.py:162} INFO - Started process (PID=861) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:47:23,622] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:47:23,623] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,623] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:47:23,632] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:47:23,646] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,646] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:23,661] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,661] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:47:23,670] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.050 seconds
[2021-09-07 16:47:54,312] {processor.py:162} INFO - Started process (PID=927) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:47:54,313] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:47:54,313] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,313] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:47:54,321] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:47:54,335] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,335] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:54,346] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,346] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:47:54,352] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:48:24,928] {processor.py:162} INFO - Started process (PID=993) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:48:24,929] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:48:24,929] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,929] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:48:24,937] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:48:24,948] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,948] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:24,959] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,958] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:48:24,965] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.038 seconds
[2021-09-07 16:48:55,600] {processor.py:162} INFO - Started process (PID=1059) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:48:55,601] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:48:55,602] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,601] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:48:55,610] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:48:55,624] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,624] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:55,636] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,636] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:48:55,644] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.047 seconds
[2021-09-07 16:49:26,242] {processor.py:162} INFO - Started process (PID=1125) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:49:26,243] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:49:26,243] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,243] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:49:26,251] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:49:26,263] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,263] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:26,274] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,274] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:49:26,281] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.041 seconds
[2021-09-07 16:49:56,873] {processor.py:162} INFO - Started process (PID=1191) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:49:56,874] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:49:56,876] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,875] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:49:56,884] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:49:56,898] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,898] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:56,911] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,910] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:49:56,919] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.048 seconds
[2021-09-07 16:50:27,500] {processor.py:162} INFO - Started process (PID=1257) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:50:27,501] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:50:27,502] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,502] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:50:27,508] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:50:27,522] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,522] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:27,533] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,533] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:50:27,539] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.041 seconds
[2021-09-07 16:50:58,160] {processor.py:162} INFO - Started process (PID=1326) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:50:58,161] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:50:58,161] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,161] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:50:58,169] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:50:58,182] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,182] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:58,193] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,193] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:50:58,200] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.041 seconds
[2021-09-07 16:51:28,836] {processor.py:162} INFO - Started process (PID=1391) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:51:28,837] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:51:28,837] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,837] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:51:28,845] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:51:28,858] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,857] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:28,873] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,872] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:51:28,883] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.049 seconds
[2021-09-07 16:51:59,437] {processor.py:162} INFO - Started process (PID=1457) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:51:59,438] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:51:59,438] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,438] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:51:59,446] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:51:59,459] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,459] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:59,471] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,471] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:51:59,477] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:52:30,060] {processor.py:162} INFO - Started process (PID=1524) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:52:30,061] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:52:30,061] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,061] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:52:30,070] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:52:30,083] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,083] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:52:30,094] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,094] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:52:30,102] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.043 seconds
[2021-09-07 16:53:00,693] {processor.py:162} INFO - Started process (PID=1590) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:53:00,694] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:53:00,694] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,694] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:53:00,702] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:53:00,715] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,715] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:00,726] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,726] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:53:00,732] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:53:31,295] {processor.py:162} INFO - Started process (PID=1657) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:53:31,295] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:53:31,296] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,296] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:53:31,305] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:53:31,318] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,318] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:31,329] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,329] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:53:31,336] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.044 seconds
[2021-09-07 16:54:01,913] {processor.py:162} INFO - Started process (PID=1724) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:54:01,914] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:54:01,914] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,914] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:54:01,923] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:54:01,936] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,936] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:01,949] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,949] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:54:01,957] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.047 seconds
[2021-09-07 16:54:32,519] {processor.py:162} INFO - Started process (PID=1792) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:54:32,519] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:54:32,520] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,520] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:54:32,528] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:54:32,541] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,541] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:32,557] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,556] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:54:32,565] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.049 seconds
[2021-09-07 16:55:03,138] {processor.py:162} INFO - Started process (PID=1858) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:55:03,139] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:55:03,139] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,139] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:55:03,146] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:55:03,159] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,159] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:03,172] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,172] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:55:03,181] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.045 seconds
[2021-09-07 16:55:33,828] {processor.py:162} INFO - Started process (PID=1923) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:55:33,829] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:55:33,829] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,829] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:55:33,836] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:55:33,848] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,848] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:33,859] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,858] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:55:33,865] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.039 seconds
[2021-09-07 16:56:04,473] {processor.py:162} INFO - Started process (PID=1989) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:56:04,474] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:56:04,474] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,474] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:56:04,483] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:56:04,495] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,495] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:04,507] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,507] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:56:04,513] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:56:35,099] {processor.py:162} INFO - Started process (PID=2055) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:56:35,099] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:56:35,100] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,100] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:56:35,108] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:56:35,121] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,121] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:35,134] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,134] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:56:35,141] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.044 seconds
[2021-09-07 16:57:05,734] {processor.py:162} INFO - Started process (PID=2121) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:57:05,735] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:57:05,735] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,735] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:57:05,743] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:57:05,755] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,755] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:05,766] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,765] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:57:05,772] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.040 seconds
[2021-09-07 16:57:36,389] {processor.py:162} INFO - Started process (PID=2187) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:57:36,390] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:57:36,391] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,390] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:57:36,398] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:57:36,411] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,411] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:36,424] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,424] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:57:36,434] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.046 seconds
[2021-09-07 16:58:07,041] {processor.py:162} INFO - Started process (PID=2253) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:58:07,042] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:58:07,042] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,042] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:58:07,050] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:58:07,063] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,062] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:07,074] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,074] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:58:07,081] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 16:58:37,880] {processor.py:162} INFO - Started process (PID=2319) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:58:37,881] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:58:37,882] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,882] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:58:37,891] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:58:37,907] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,907] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:37,920] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,920] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:58:37,928] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.050 seconds
[2021-09-07 16:59:08,582] {processor.py:162} INFO - Started process (PID=2385) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:59:08,582] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:59:08,583] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,583] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:59:08,591] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:59:08,609] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,609] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:08,621] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,621] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:59:08,628] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.049 seconds
[2021-09-07 16:59:39,261] {processor.py:162} INFO - Started process (PID=2451) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:59:39,262] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 16:59:39,262] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,262] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:59:39,270] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 16:59:39,283] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,283] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:39,294] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,294] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 16:59:39,302] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.042 seconds
[2021-09-07 17:00:09,915] {processor.py:162} INFO - Started process (PID=2517) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:00:09,917] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:00:09,917] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,917] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:00:09,924] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:00:09,938] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,937] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:09,951] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,951] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:00:09,958] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.044 seconds
[2021-09-07 17:00:40,585] {processor.py:162} INFO - Started process (PID=2583) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:00:40,585] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:00:40,586] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,585] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:00:40,593] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:00:40,605] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,605] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:40,617] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,616] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:00:40,623] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.041 seconds
[2021-09-07 17:01:11,250] {processor.py:162} INFO - Started process (PID=2649) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:01:11,251] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:01:11,251] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,251] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:01:11,258] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:01:11,271] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,271] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:11,282] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,282] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:01:11,289] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.041 seconds
[2021-09-07 17:01:41,921] {processor.py:162} INFO - Started process (PID=2715) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:01:41,922] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:01:41,922] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,922] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:01:41,933] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:01:41,954] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,954] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:41,972] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,972] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:01:41,987] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.069 seconds
[2021-09-07 17:02:12,626] {processor.py:162} INFO - Started process (PID=2781) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:02:12,626] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:02:12,627] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,627] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:02:12,634] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:02:12,647] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,647] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:12,657] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,657] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:02:12,664] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.041 seconds
[2021-09-07 17:02:43,435] {processor.py:162} INFO - Started process (PID=2847) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:02:43,435] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:02:43,436] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,436] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:02:43,446] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:02:43,464] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,464] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:43,481] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,481] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:02:43,496] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.063 seconds
[2021-09-07 17:03:14,372] {processor.py:162} INFO - Started process (PID=2913) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:03:14,373] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:03:14,374] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,374] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:03:14,382] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:03:14,399] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,399] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:14,416] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,416] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:03:14,426] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.056 seconds
[2021-09-07 17:03:45,282] {processor.py:162} INFO - Started process (PID=2979) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:03:45,283] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:03:45,283] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,283] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:03:45,296] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:03:45,316] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,316] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:45,332] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,332] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:03:45,342] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.062 seconds
[2021-09-07 17:04:15,979] {processor.py:162} INFO - Started process (PID=3046) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:04:15,980] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:04:15,981] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,981] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:04:15,991] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:04:16,007] {logging_mixin.py:109} INFO - [2021-09-07 17:04:16,007] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:16,021] {logging_mixin.py:109} INFO - [2021-09-07 17:04:16,021] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:04:16,029] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.052 seconds
[2021-09-07 17:04:46,758] {processor.py:162} INFO - Started process (PID=3112) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:04:46,759] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:04:46,759] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,759] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:04:46,767] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:04:46,782] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,782] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:46,794] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,794] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:04:46,801] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.045 seconds
[2021-09-07 17:05:17,449] {processor.py:162} INFO - Started process (PID=3179) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:05:17,451] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:05:17,451] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,451] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:05:17,458] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:05:17,470] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,470] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:05:17,482] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,482] {dag.py:2306} INFO - Setting next_dagrun for airflow-clear-missing-dags to 2021-09-06 00:00:00+00:00
[2021-09-07 17:05:17,489] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-clear-missing-dags.py took 0.041 seconds
[2021-09-07 17:05:49,416] {processor.py:162} INFO - Started process (PID=3252) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:05:49,417] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:05:49,418] {logging_mixin.py:109} INFO - [2021-09-07 17:05:49,417] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:05:49,426] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:05:50,508] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:20,762] {processor.py:162} INFO - Started process (PID=3317) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:06:20,763] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:06:20,764] {logging_mixin.py:109} INFO - [2021-09-07 17:06:20,764] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:06:20,775] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:06:22,174] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:52,551] {processor.py:162} INFO - Started process (PID=3384) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:06:52,552] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:06:52,553] {logging_mixin.py:109} INFO - [2021-09-07 17:06:52,553] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:06:52,565] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:06:53,069] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:23,661] {processor.py:162} INFO - Started process (PID=3450) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:07:23,662] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:07:23,662] {logging_mixin.py:109} INFO - [2021-09-07 17:07:23,662] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:07:23,673] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:07:24,395] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:55,134] {processor.py:162} INFO - Started process (PID=3516) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:07:55,135] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:07:55,136] {logging_mixin.py:109} INFO - [2021-09-07 17:07:55,136] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:07:55,148] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:07:55,482] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:26,261] {processor.py:162} INFO - Started process (PID=3582) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:08:26,262] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:08:26,263] {logging_mixin.py:109} INFO - [2021-09-07 17:08:26,263] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:08:26,275] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:08:27,635] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:58,511] {processor.py:162} INFO - Started process (PID=3651) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:08:58,512] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:08:58,513] {logging_mixin.py:109} INFO - [2021-09-07 17:08:58,513] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:08:58,529] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:08:59,271] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:29,666] {processor.py:162} INFO - Started process (PID=3722) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:09:29,666] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:09:29,667] {logging_mixin.py:109} INFO - [2021-09-07 17:09:29,667] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:09:29,674] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:09:29,817] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:00,336] {processor.py:162} INFO - Started process (PID=3781) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:10:00,337] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:10:00,338] {logging_mixin.py:109} INFO - [2021-09-07 17:10:00,337] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:10:00,346] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:10:01,187] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:31,500] {processor.py:162} INFO - Started process (PID=3847) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:10:31,501] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:10:31,502] {logging_mixin.py:109} INFO - [2021-09-07 17:10:31,502] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:10:31,513] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:10:32,466] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:03,218] {processor.py:162} INFO - Started process (PID=3913) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:11:03,219] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:11:03,219] {logging_mixin.py:109} INFO - [2021-09-07 17:11:03,219] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:11:03,231] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:11:03,526] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:33,811] {processor.py:162} INFO - Started process (PID=3974) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:11:33,812] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:11:33,813] {logging_mixin.py:109} INFO - [2021-09-07 17:11:33,812] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:11:33,825] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:11:35,091] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:05,170] {processor.py:162} INFO - Started process (PID=4040) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:12:05,172] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:12:05,173] {logging_mixin.py:109} INFO - [2021-09-07 17:12:05,173] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:12:05,189] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:12:06,303] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:36,380] {processor.py:162} INFO - Started process (PID=4106) to work on /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:12:36,381] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-clear-missing-dags.py for tasks to queue
[2021-09-07 17:12:36,382] {logging_mixin.py:109} INFO - [2021-09-07 17:12:36,382] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:12:36,395] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-clear-missing-dags']) retrieved from /usr/local/airflow/dags/airflow-clear-missing-dags.py
[2021-09-07 17:12:37,407] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
