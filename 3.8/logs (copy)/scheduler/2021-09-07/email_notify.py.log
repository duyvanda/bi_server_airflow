[2021-09-07 10:34:52,560] {processor.py:162} INFO - Started process (PID=191) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 10:34:52,561] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 10:34:52,561] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,561] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 10:34:52,568] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 10:34:52,581] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,581] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 10:34:52,591] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,591] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 10:34:52,599] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.040 seconds
[2021-09-07 16:42:47,338] {processor.py:162} INFO - Started process (PID=191) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:42:47,339] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:42:47,340] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,339] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:42:47,349] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:42:47,362] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,362] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:42:47,371] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,371] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:42:47,378] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.044 seconds
[2021-09-07 16:43:18,012] {processor.py:162} INFO - Started process (PID=305) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:43:18,013] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:43:18,013] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,013] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:43:18,020] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:43:18,033] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,033] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:18,042] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,042] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:43:18,049] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.039 seconds
[2021-09-07 16:43:48,621] {processor.py:162} INFO - Started process (PID=371) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:43:48,622] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:43:48,622] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,622] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:43:48,631] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:43:48,643] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,643] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:48,652] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,652] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:43:48,659] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.040 seconds
[2021-09-07 16:44:19,222] {processor.py:162} INFO - Started process (PID=438) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:44:19,223] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:44:19,223] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,223] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:44:19,230] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:44:19,243] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,243] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:19,252] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,252] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:44:19,258] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.038 seconds
[2021-09-07 16:44:49,854] {processor.py:162} INFO - Started process (PID=504) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:44:49,855] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:44:49,855] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,855] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:44:49,862] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:44:49,875] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,875] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:49,884] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,884] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:44:49,891] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.039 seconds
[2021-09-07 16:45:20,474] {processor.py:162} INFO - Started process (PID=571) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:45:20,475] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:45:20,475] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,475] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:45:20,482] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:45:20,495] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,495] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:20,507] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,507] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:45:20,515] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.043 seconds
[2021-09-07 16:45:51,160] {processor.py:162} INFO - Started process (PID=638) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:45:51,161] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:45:51,162] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,162] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:45:51,170] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:45:51,184] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,184] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:51,194] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,194] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:45:51,202] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.046 seconds
[2021-09-07 16:46:21,989] {processor.py:162} INFO - Started process (PID=704) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:46:21,991] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:46:21,991] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,991] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:46:22,002] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:46:22,024] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,024] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:22,040] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,040] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:46:22,047] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.061 seconds
[2021-09-07 16:46:52,775] {processor.py:162} INFO - Started process (PID=770) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:46:52,776] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:46:52,776] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,776] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:46:52,784] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:46:52,796] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,796] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:52,804] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,804] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:46:52,811] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.037 seconds
[2021-09-07 16:47:23,378] {processor.py:162} INFO - Started process (PID=836) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:47:23,378] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:47:23,379] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,379] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:47:23,386] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:47:23,398] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,398] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:23,406] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,406] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:47:23,412] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.036 seconds
[2021-09-07 16:47:54,081] {processor.py:162} INFO - Started process (PID=902) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:47:54,082] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:47:54,082] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,082] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:47:54,090] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:47:54,105] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,105] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:54,117] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,117] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:47:54,124] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.045 seconds
[2021-09-07 16:48:24,699] {processor.py:162} INFO - Started process (PID=968) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:48:24,699] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:48:24,700] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,700] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:48:24,707] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:48:24,719] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,719] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:24,727] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,727] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:48:24,733] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.036 seconds
[2021-09-07 16:48:55,350] {processor.py:162} INFO - Started process (PID=1034) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:48:55,351] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:48:55,351] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,351] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:48:55,359] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:48:55,373] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,373] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:55,384] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,384] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:48:55,394] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.046 seconds
[2021-09-07 16:49:25,995] {processor.py:162} INFO - Started process (PID=1100) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:49:25,995] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:49:25,996] {logging_mixin.py:109} INFO - [2021-09-07 16:49:25,995] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:49:26,003] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:49:26,015] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,015] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:26,024] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,024] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:49:26,031] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.038 seconds
[2021-09-07 16:49:56,651] {processor.py:162} INFO - Started process (PID=1166) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:49:56,652] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:49:56,653] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,653] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:49:56,662] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:49:56,676] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,676] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:56,685] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,685] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:49:56,691] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.042 seconds
[2021-09-07 16:50:27,254] {processor.py:162} INFO - Started process (PID=1232) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:50:27,255] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:50:27,256] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,256] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:50:27,262] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:50:27,275] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,275] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:27,284] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,284] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:50:27,291] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.038 seconds
[2021-09-07 16:50:57,921] {processor.py:162} INFO - Started process (PID=1299) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:50:57,921] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:50:57,922] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,921] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:50:57,930] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:50:57,943] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,943] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:57,951] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,951] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:50:57,958] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.040 seconds
[2021-09-07 16:51:28,597] {processor.py:162} INFO - Started process (PID=1366) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:51:28,597] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:51:28,598] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,598] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:51:28,606] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:51:28,620] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,619] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:28,632] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,632] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:51:28,641] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.047 seconds
[2021-09-07 16:51:59,220] {processor.py:162} INFO - Started process (PID=1432) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:51:59,221] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:51:59,221] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,221] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:51:59,229] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:51:59,242] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,242] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:59,252] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,252] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:51:59,259] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.042 seconds
[2021-09-07 16:52:29,829] {processor.py:162} INFO - Started process (PID=1499) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:52:29,830] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:52:29,830] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,830] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:52:29,840] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:52:29,853] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,853] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:52:29,863] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,863] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:52:29,872] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.045 seconds
[2021-09-07 16:53:00,452] {processor.py:162} INFO - Started process (PID=1565) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:53:00,452] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:53:00,453] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,453] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:53:00,460] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:53:00,473] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,473] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:00,482] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,482] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:53:00,488] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.038 seconds
[2021-09-07 16:53:31,064] {processor.py:162} INFO - Started process (PID=1632) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:53:31,065] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:53:31,065] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,065] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:53:31,072] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:53:31,084] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,084] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:31,093] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,093] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:53:31,099] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.037 seconds
[2021-09-07 16:54:01,675] {processor.py:162} INFO - Started process (PID=1699) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:54:01,675] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:54:01,676] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,676] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:54:01,684] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:54:01,697] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,697] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:01,707] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,707] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:54:01,715] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.042 seconds
[2021-09-07 16:54:32,286] {processor.py:162} INFO - Started process (PID=1765) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:54:32,287] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:54:32,287] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,287] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:54:32,294] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:54:32,308] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,308] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:32,316] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,316] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:54:32,322] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.038 seconds
[2021-09-07 16:55:02,903] {processor.py:162} INFO - Started process (PID=1831) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:55:02,904] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:55:02,904] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,904] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:55:02,911] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:55:02,925] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,924] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:02,934] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,934] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:55:02,941] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.040 seconds
[2021-09-07 16:55:33,576] {processor.py:162} INFO - Started process (PID=1898) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:55:33,576] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:55:33,577] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,576] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:55:33,584] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:55:33,596] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,596] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:33,604] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,604] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:55:33,609] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.036 seconds
[2021-09-07 16:56:04,248] {processor.py:162} INFO - Started process (PID=1964) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:56:04,249] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:56:04,249] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,249] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:56:04,257] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:56:04,271] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,271] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:04,281] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,281] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:56:04,288] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.042 seconds
[2021-09-07 16:56:34,872] {processor.py:162} INFO - Started process (PID=2030) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:56:34,872] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:56:34,873] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,873] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:56:34,880] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:56:34,892] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,892] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:34,901] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,901] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:56:34,908] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.039 seconds
[2021-09-07 16:57:05,487] {processor.py:162} INFO - Started process (PID=2096) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:57:05,488] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:57:05,488] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,488] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:57:05,495] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:57:05,507] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,507] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:05,516] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,516] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:57:05,523] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.038 seconds
[2021-09-07 16:57:36,143] {processor.py:162} INFO - Started process (PID=2162) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:57:36,144] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:57:36,144] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,144] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:57:36,152] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:57:36,164] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,164] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:36,173] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,172] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:57:36,179] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.038 seconds
[2021-09-07 16:58:06,813] {processor.py:162} INFO - Started process (PID=2228) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:58:06,814] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:58:06,814] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,814] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:58:06,822] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:58:06,834] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,834] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:06,843] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,843] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:58:06,850] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.039 seconds
[2021-09-07 16:58:37,525] {processor.py:162} INFO - Started process (PID=2294) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:58:37,526] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:58:37,526] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,526] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:58:37,541] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:58:37,565] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,565] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:37,580] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,580] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:58:37,588] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.067 seconds
[2021-09-07 16:59:08,358] {processor.py:162} INFO - Started process (PID=2360) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:59:08,359] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:59:08,359] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,359] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:59:08,367] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:59:08,380] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,380] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:08,389] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,389] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:59:08,396] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.040 seconds
[2021-09-07 16:59:39,020] {processor.py:162} INFO - Started process (PID=2426) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:59:39,020] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 16:59:39,021] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,021] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:59:39,028] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 16:59:39,041] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,041] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:39,051] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,051] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 16:59:39,060] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.042 seconds
[2021-09-07 17:00:09,684] {processor.py:162} INFO - Started process (PID=2492) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:00:09,685] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:00:09,686] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,685] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:00:09,693] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:00:09,705] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,705] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:09,713] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,713] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:00:09,720] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.038 seconds
[2021-09-07 17:00:40,334] {processor.py:162} INFO - Started process (PID=2558) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:00:40,335] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:00:40,336] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,336] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:00:40,344] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:00:40,359] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,359] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:40,369] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,369] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:00:40,377] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.045 seconds
[2021-09-07 17:01:11,004] {processor.py:162} INFO - Started process (PID=2624) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:01:11,005] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:01:11,005] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,005] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:01:11,012] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:01:11,025] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,025] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:11,034] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,034] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:01:11,042] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.040 seconds
[2021-09-07 17:01:41,663] {processor.py:162} INFO - Started process (PID=2690) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:01:41,664] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:01:41,664] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,664] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:01:41,672] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:01:41,685] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,685] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:41,694] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,694] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:01:41,700] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.039 seconds
[2021-09-07 17:02:12,403] {processor.py:162} INFO - Started process (PID=2756) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:02:12,403] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:02:12,404] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,403] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:02:12,411] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:02:12,424] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,424] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:12,433] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,433] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:02:12,440] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.040 seconds
[2021-09-07 17:02:43,087] {processor.py:162} INFO - Started process (PID=2822) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:02:43,089] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:02:43,089] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,089] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:02:43,100] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:02:43,123] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,123] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:43,138] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,138] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:02:43,152] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.068 seconds
[2021-09-07 17:03:14,057] {processor.py:162} INFO - Started process (PID=2888) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:03:14,058] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:03:14,058] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,058] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:03:14,072] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:03:14,098] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,098] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:14,116] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,115] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:03:14,130] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.080 seconds
[2021-09-07 17:03:44,933] {processor.py:162} INFO - Started process (PID=2954) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:03:44,934] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:03:44,934] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,934] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:03:44,947] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:03:44,964] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,964] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:44,979] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,979] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:03:44,989] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.059 seconds
[2021-09-07 17:04:15,724] {processor.py:162} INFO - Started process (PID=3021) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:04:15,725] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:04:15,725] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,725] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:04:15,733] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:04:15,746] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,746] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:15,755] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,755] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:04:15,762] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.040 seconds
[2021-09-07 17:04:46,483] {processor.py:162} INFO - Started process (PID=3087) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:04:46,484] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:04:46,484] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,484] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:04:46,492] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:04:46,507] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,507] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:46,519] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,518] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:04:46,525] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.045 seconds
[2021-09-07 17:05:17,210] {processor.py:162} INFO - Started process (PID=3156) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:05:17,211] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:05:17,212] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,212] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:05:17,220] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:05:17,234] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,234] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:05:17,247] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,247] {dag.py:2306} INFO - Setting next_dagrun for sending_email to 2021-08-14 17:00:00+00:00
[2021-09-07 17:05:17,257] {processor.py:170} INFO - Processing /usr/local/airflow/dags/email_notify.py took 0.049 seconds
[2021-09-07 17:05:48,424] {processor.py:162} INFO - Started process (PID=3227) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:05:48,425] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:05:48,425] {logging_mixin.py:109} INFO - [2021-09-07 17:05:48,425] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:05:48,439] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:05:49,350] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:19,804] {processor.py:162} INFO - Started process (PID=3293) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:06:19,805] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:06:19,805] {logging_mixin.py:109} INFO - [2021-09-07 17:06:19,805] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:06:19,819] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:06:20,733] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:51,369] {processor.py:162} INFO - Started process (PID=3374) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:06:51,370] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:06:51,371] {logging_mixin.py:109} INFO - [2021-09-07 17:06:51,371] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:06:51,383] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:06:52,104] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:22,533] {processor.py:162} INFO - Started process (PID=3440) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:07:22,535] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:07:22,535] {logging_mixin.py:109} INFO - [2021-09-07 17:07:22,535] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:07:22,550] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:07:23,635] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:53,975] {processor.py:162} INFO - Started process (PID=3508) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:07:53,976] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:07:53,977] {logging_mixin.py:109} INFO - [2021-09-07 17:07:53,977] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:07:53,995] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:07:55,111] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:25,301] {processor.py:162} INFO - Started process (PID=3574) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:08:25,302] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:08:25,302] {logging_mixin.py:109} INFO - [2021-09-07 17:08:25,302] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:08:25,314] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:08:26,233] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:56,890] {processor.py:162} INFO - Started process (PID=3639) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:08:56,891] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:08:56,892] {logging_mixin.py:109} INFO - [2021-09-07 17:08:56,892] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:08:56,903] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:08:57,519] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:28,309] {processor.py:162} INFO - Started process (PID=3705) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:09:28,310] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:09:28,310] {logging_mixin.py:109} INFO - [2021-09-07 17:09:28,310] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:09:28,319] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:09:29,054] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:59,446] {processor.py:162} INFO - Started process (PID=3771) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:09:59,447] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:09:59,448] {logging_mixin.py:109} INFO - [2021-09-07 17:09:59,448] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:09:59,460] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:10:00,198] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:30,829] {processor.py:162} INFO - Started process (PID=3836) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:10:30,830] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:10:30,831] {logging_mixin.py:109} INFO - [2021-09-07 17:10:30,831] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:10:30,842] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:10:31,386] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:01,498] {processor.py:162} INFO - Started process (PID=3898) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:11:01,499] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:11:01,500] {logging_mixin.py:109} INFO - [2021-09-07 17:11:01,499] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:11:01,514] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:11:02,185] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:33,074] {processor.py:162} INFO - Started process (PID=3969) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:11:33,075] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:11:33,075] {logging_mixin.py:109} INFO - [2021-09-07 17:11:33,075] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:11:33,087] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:11:34,025] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:04,621] {processor.py:162} INFO - Started process (PID=4035) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:12:04,622] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:12:04,622] {logging_mixin.py:109} INFO - [2021-09-07 17:12:04,622] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:12:04,629] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:12:05,301] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:35,884] {processor.py:162} INFO - Started process (PID=4101) to work on /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:12:35,885] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/email_notify.py for tasks to queue
[2021-09-07 17:12:35,885] {logging_mixin.py:109} INFO - [2021-09-07 17:12:35,885] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:12:35,892] {processor.py:623} INFO - DAG(s) dict_keys(['sending_email']) retrieved from /usr/local/airflow/dags/email_notify.py
[2021-09-07 17:12:36,549] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
