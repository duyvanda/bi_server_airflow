[2021-09-07 10:34:52,686] {processor.py:162} INFO - Started process (PID=206) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 10:34:52,686] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 10:34:52,687] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,687] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 10:34:52,697] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 10:34:52,711] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,711] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 10:34:52,721] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,721] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 10:34:52,727] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.044 seconds
[2021-09-07 16:42:47,474] {processor.py:162} INFO - Started process (PID=206) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:42:47,474] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:42:47,475] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,475] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:42:47,485] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:42:47,499] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,499] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:42:47,507] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,507] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:42:47,512] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.043 seconds
[2021-09-07 16:43:18,136] {processor.py:162} INFO - Started process (PID=320) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:43:18,136] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:43:18,137] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,137] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:43:18,146] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:43:18,158] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,158] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:18,165] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,165] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:43:18,170] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 16:43:48,753] {processor.py:162} INFO - Started process (PID=386) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:43:48,754] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:43:48,754] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,754] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:43:48,762] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:43:48,774] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,774] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:48,782] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,782] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:43:48,787] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.035 seconds
[2021-09-07 16:44:19,360] {processor.py:162} INFO - Started process (PID=453) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:44:19,360] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:44:19,361] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,361] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:44:19,370] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:44:19,382] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,382] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:19,391] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,391] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:44:19,396] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.039 seconds
[2021-09-07 16:44:49,985] {processor.py:162} INFO - Started process (PID=519) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:44:49,985] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:44:49,986] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,985] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:44:49,995] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:44:50,006] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,006] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:50,014] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,014] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:44:50,019] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 16:45:20,630] {processor.py:162} INFO - Started process (PID=586) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:45:20,631] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:45:20,631] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,631] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:45:20,642] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:45:20,656] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,656] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:20,664] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,664] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:45:20,669] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.042 seconds
[2021-09-07 16:45:51,291] {processor.py:162} INFO - Started process (PID=653) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:45:51,291] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:45:51,292] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,292] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:45:51,300] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:45:51,313] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,312] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:51,321] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,321] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:45:51,326] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.037 seconds
[2021-09-07 16:46:22,150] {processor.py:162} INFO - Started process (PID=719) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:46:22,152] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:46:22,153] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,153] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:46:22,171] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:46:22,193] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,192] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:22,206] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,205] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:46:22,212] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.067 seconds
[2021-09-07 16:46:52,900] {processor.py:162} INFO - Started process (PID=785) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:46:52,901] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:46:52,901] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,901] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:46:52,910] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:46:52,922] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,922] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:52,930] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,930] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:46:52,935] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.037 seconds
[2021-09-07 16:47:23,511] {processor.py:162} INFO - Started process (PID=851) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:47:23,512] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:47:23,512] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,512] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:47:23,522] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:47:23,536] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,536] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:23,544] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,544] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:47:23,548] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.039 seconds
[2021-09-07 16:47:54,209] {processor.py:162} INFO - Started process (PID=917) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:47:54,210] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:47:54,210] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,210] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:47:54,219] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:47:54,232] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,232] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:54,240] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,240] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:47:54,246] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.039 seconds
[2021-09-07 16:48:24,827] {processor.py:162} INFO - Started process (PID=982) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:48:24,827] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:48:24,828] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,828] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:48:24,837] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:48:24,851] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,850] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:24,859] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,859] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:48:24,864] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.039 seconds
[2021-09-07 16:48:55,498] {processor.py:162} INFO - Started process (PID=1049) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:48:55,498] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:48:55,498] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,498] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:48:55,507] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:48:55,519] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,518] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:55,528] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,528] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:48:55,533] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.038 seconds
[2021-09-07 16:49:26,128] {processor.py:162} INFO - Started process (PID=1115) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:49:26,129] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:49:26,129] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,129] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:49:26,140] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:49:26,157] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,157] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:26,169] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,169] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:49:26,176] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.049 seconds
[2021-09-07 16:49:56,771] {processor.py:162} INFO - Started process (PID=1181) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:49:56,771] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:49:56,772] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,772] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:49:56,780] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:49:56,793] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,793] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:56,801] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,801] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:49:56,805] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 16:50:27,398] {processor.py:162} INFO - Started process (PID=1247) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:50:27,399] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:50:27,399] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,399] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:50:27,408] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:50:27,420] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,420] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:27,429] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,429] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:50:27,434] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.038 seconds
[2021-09-07 16:50:58,052] {processor.py:162} INFO - Started process (PID=1314) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:50:58,052] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:50:58,053] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,053] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:50:58,062] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:50:58,075] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,075] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:58,084] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,084] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:50:58,089] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.039 seconds
[2021-09-07 16:51:28,732] {processor.py:162} INFO - Started process (PID=1381) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:51:28,733] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:51:28,733] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,733] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:51:28,742] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:51:28,754] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,754] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:28,763] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,763] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:51:28,768] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.038 seconds
[2021-09-07 16:51:59,339] {processor.py:162} INFO - Started process (PID=1447) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:51:59,339] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:51:59,340] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,340] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:51:59,348] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:51:59,360] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,359] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:59,367] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,367] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:51:59,372] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.035 seconds
[2021-09-07 16:52:29,961] {processor.py:162} INFO - Started process (PID=1514) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:52:29,962] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:52:29,962] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,962] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:52:29,971] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:52:29,983] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,983] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:52:29,991] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,991] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:52:29,996] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 16:53:00,592] {processor.py:162} INFO - Started process (PID=1580) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:53:00,593] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:53:00,593] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,593] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:53:00,601] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:53:00,613] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,613] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:00,621] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,621] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:53:00,626] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 16:53:31,193] {processor.py:162} INFO - Started process (PID=1647) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:53:31,194] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:53:31,194] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,194] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:53:31,202] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:53:31,214] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,214] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:31,222] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,222] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:53:31,227] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.035 seconds
[2021-09-07 16:54:01,813] {processor.py:162} INFO - Started process (PID=1714) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:54:01,813] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:54:01,814] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,814] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:54:01,822] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:54:01,834] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,834] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:01,842] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,842] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:54:01,847] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 16:54:32,418] {processor.py:162} INFO - Started process (PID=1780) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:54:32,418] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:54:32,419] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,419] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:54:32,427] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:54:32,439] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,439] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:32,448] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,447] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:54:32,452] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 16:55:03,037] {processor.py:162} INFO - Started process (PID=1846) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:55:03,038] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:55:03,038] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,038] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:55:03,047] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:55:03,059] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,059] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:03,067] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,067] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:55:03,072] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.037 seconds
[2021-09-07 16:55:33,712] {processor.py:162} INFO - Started process (PID=1912) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:55:33,713] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:55:33,713] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,713] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:55:33,724] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:55:33,742] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,742] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:33,755] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,755] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:55:33,762] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.052 seconds
[2021-09-07 16:56:04,375] {processor.py:162} INFO - Started process (PID=1979) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:56:04,375] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:56:04,376] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,376] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:56:04,384] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:56:04,396] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,396] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:04,404] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,404] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:56:04,408] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.035 seconds
[2021-09-07 16:56:34,997] {processor.py:162} INFO - Started process (PID=2045) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:56:34,997] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:56:34,998] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,998] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:56:35,006] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:56:35,019] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,019] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:35,027] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,027] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:56:35,032] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.037 seconds
[2021-09-07 16:57:05,629] {processor.py:162} INFO - Started process (PID=2111) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:57:05,630] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:57:05,631] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,631] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:57:05,640] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:57:05,652] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,652] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:05,664] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,664] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:57:05,670] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.043 seconds
[2021-09-07 16:57:36,283] {processor.py:162} INFO - Started process (PID=2177) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:57:36,284] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:57:36,284] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,284] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:57:36,292] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:57:36,305] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,304] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:36,313] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,313] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:57:36,318] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.037 seconds
[2021-09-07 16:58:06,936] {processor.py:162} INFO - Started process (PID=2243) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:58:06,936] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:58:06,937] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,937] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:58:06,945] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:58:06,957] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,957] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:06,966] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,965] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:58:06,973] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.039 seconds
[2021-09-07 16:58:37,735] {processor.py:162} INFO - Started process (PID=2309) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:58:37,736] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:58:37,736] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,736] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:58:37,748] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:58:37,772] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,771] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:37,788] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,788] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:58:37,795] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.063 seconds
[2021-09-07 16:59:08,478] {processor.py:162} INFO - Started process (PID=2375) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:59:08,478] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:59:08,479] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,479] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:59:08,488] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:59:08,502] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,502] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:08,510] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,510] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:59:08,515] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.039 seconds
[2021-09-07 16:59:39,160] {processor.py:162} INFO - Started process (PID=2441) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:59:39,160] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 16:59:39,161] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,161] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:59:39,169] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 16:59:39,181] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,181] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:39,189] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,189] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 16:59:39,193] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 17:00:09,810] {processor.py:162} INFO - Started process (PID=2507) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:00:09,811] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:00:09,811] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,811] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:00:09,820] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:00:09,832] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,832] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:09,840] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,840] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:00:09,846] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.038 seconds
[2021-09-07 17:00:40,486] {processor.py:162} INFO - Started process (PID=2573) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:00:40,487] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:00:40,487] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,487] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:00:40,496] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:00:40,508] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,508] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:40,516] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,516] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:00:40,520] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 17:01:11,153] {processor.py:162} INFO - Started process (PID=2639) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:01:11,154] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:01:11,154] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,154] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:01:11,163] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:01:11,175] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,175] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:11,183] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,183] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:01:11,187] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 17:01:41,807] {processor.py:162} INFO - Started process (PID=2705) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:01:41,808] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:01:41,809] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,809] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:01:41,822] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:01:41,838] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,837] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:41,847] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,847] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:01:41,852] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.048 seconds
[2021-09-07 17:02:12,524] {processor.py:162} INFO - Started process (PID=2771) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:02:12,525] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:02:12,525] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,525] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:02:12,535] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:02:12,548] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,548] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:12,556] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,556] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:02:12,561] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.039 seconds
[2021-09-07 17:02:43,312] {processor.py:162} INFO - Started process (PID=2837) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:02:43,313] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:02:43,313] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,313] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:02:43,322] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:02:43,335] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,335] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:43,344] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,344] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:02:43,349] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.040 seconds
[2021-09-07 17:03:14,245] {processor.py:162} INFO - Started process (PID=2903) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:03:14,246] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:03:14,246] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,246] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:03:14,257] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:03:14,274] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,273] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:14,283] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,283] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:03:14,293] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.051 seconds
[2021-09-07 17:03:45,143] {processor.py:162} INFO - Started process (PID=2969) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:03:45,145] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:03:45,146] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,146] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:03:45,156] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:03:45,172] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,172] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:45,185] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,184] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:03:45,191] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.050 seconds
[2021-09-07 17:04:15,877] {processor.py:162} INFO - Started process (PID=3036) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:04:15,878] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:04:15,878] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,878] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:04:15,887] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:04:15,899] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,898] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:15,907] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,907] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:04:15,912] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.036 seconds
[2021-09-07 17:04:46,648] {processor.py:162} INFO - Started process (PID=3102) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:04:46,649] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:04:46,650] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,649] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:04:46,659] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:04:46,673] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,673] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:46,682] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,682] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:04:46,687] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.042 seconds
[2021-09-07 17:05:17,350] {processor.py:162} INFO - Started process (PID=3169) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:05:17,351] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:05:17,352] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,352] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:05:17,360] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:05:17,372] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,372] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:05:17,381] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,381] {dag.py:2306} INFO - Setting next_dagrun for packaged_dag to 2018-12-31T17:00:00+00:00
[2021-09-07 17:05:17,385] {processor.py:170} INFO - Processing /usr/local/airflow/dags/packaged_dag.zip took 0.037 seconds
[2021-09-07 17:05:49,002] {processor.py:162} INFO - Started process (PID=3242) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:05:49,003] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:05:49,004] {logging_mixin.py:109} INFO - [2021-09-07 17:05:49,003] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:05:49,013] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:05:50,170] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:20,759] {processor.py:162} INFO - Started process (PID=3315) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:06:20,760] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:06:20,761] {logging_mixin.py:109} INFO - [2021-09-07 17:06:20,761] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:06:20,775] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:06:21,600] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:52,134] {processor.py:162} INFO - Started process (PID=3381) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:06:52,135] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:06:52,136] {logging_mixin.py:109} INFO - [2021-09-07 17:06:52,135] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:06:52,155] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:06:53,107] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:23,541] {processor.py:162} INFO - Started process (PID=3445) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:07:23,542] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:07:23,543] {logging_mixin.py:109} INFO - [2021-09-07 17:07:23,543] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:07:23,559] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:07:23,768] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:53,980] {processor.py:162} INFO - Started process (PID=3511) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:07:53,981] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:07:53,982] {logging_mixin.py:109} INFO - [2021-09-07 17:07:53,982] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:07:54,003] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:07:55,281] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:26,129] {processor.py:162} INFO - Started process (PID=3577) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:08:26,130] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:08:26,131] {logging_mixin.py:109} INFO - [2021-09-07 17:08:26,131] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:08:26,147] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:08:26,774] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:56,983] {processor.py:162} INFO - Started process (PID=3644) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:08:56,984] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:08:56,985] {logging_mixin.py:109} INFO - [2021-09-07 17:08:56,985] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:08:56,997] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:08:57,482] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:28,604] {processor.py:162} INFO - Started process (PID=3710) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:09:28,605] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:09:28,605] {logging_mixin.py:109} INFO - [2021-09-07 17:09:28,605] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:09:28,618] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:09:29,103] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:00,219] {processor.py:162} INFO - Started process (PID=3776) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:10:00,220] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:10:00,221] {logging_mixin.py:109} INFO - [2021-09-07 17:10:00,221] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:10:00,233] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:10:00,710] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:31,413] {processor.py:162} INFO - Started process (PID=3842) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:10:31,415] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:10:31,415] {logging_mixin.py:109} INFO - [2021-09-07 17:10:31,415] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:10:31,429] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:10:32,584] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:03,214] {processor.py:162} INFO - Started process (PID=3910) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:11:03,215] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:11:03,216] {logging_mixin.py:109} INFO - [2021-09-07 17:11:03,216] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:11:03,231] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:11:04,327] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:34,531] {processor.py:162} INFO - Started process (PID=3984) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:11:34,533] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:11:34,533] {logging_mixin.py:109} INFO - [2021-09-07 17:11:34,533] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:11:34,555] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:11:35,174] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:05,930] {processor.py:162} INFO - Started process (PID=4050) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:12:05,930] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:12:05,931] {logging_mixin.py:109} INFO - [2021-09-07 17:12:05,931] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:12:05,941] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:12:06,941] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:37,434] {processor.py:162} INFO - Started process (PID=4118) to work on /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:12:37,435] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/packaged_dag.zip for tasks to queue
[2021-09-07 17:12:37,435] {logging_mixin.py:109} INFO - [2021-09-07 17:12:37,435] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:12:37,449] {processor.py:623} INFO - DAG(s) dict_keys(['packaged_dag']) retrieved from /usr/local/airflow/dags/packaged_dag.zip
[2021-09-07 17:12:38,313] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
