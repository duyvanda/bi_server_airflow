[2021-09-07 10:34:52,355] {processor.py:162} INFO - Started process (PID=176) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 10:34:52,356] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 10:34:52,356] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,356] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 10:34:52,567] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 10:34:52,577] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,577] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 10:34:52,585] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,585] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 10:34:52,591] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.238 seconds
[2021-09-07 16:42:47,120] {processor.py:162} INFO - Started process (PID=176) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:42:47,120] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:42:47,120] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,120] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:42:47,330] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:42:47,341] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,341] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:42:47,348] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,348] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:42:47,354] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.236 seconds
[2021-09-07 16:43:17,792] {processor.py:162} INFO - Started process (PID=289) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:43:17,793] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:43:17,794] {logging_mixin.py:109} INFO - [2021-09-07 16:43:17,794] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:43:18,014] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:43:18,026] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,026] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:18,034] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,034] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:43:18,040] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.251 seconds
[2021-09-07 16:43:48,409] {processor.py:162} INFO - Started process (PID=355) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:43:48,410] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:43:48,410] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,410] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:43:48,628] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:43:48,639] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,639] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:48,648] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,647] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:43:48,654] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.249 seconds
[2021-09-07 16:44:19,018] {processor.py:162} INFO - Started process (PID=422) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:44:19,019] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:44:19,019] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,019] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:44:19,228] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:44:19,240] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,240] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:19,248] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,248] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:44:19,254] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.238 seconds
[2021-09-07 16:44:49,661] {processor.py:162} INFO - Started process (PID=489) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:44:49,661] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:44:49,662] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,662] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:44:49,868] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:44:49,880] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,880] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:49,889] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,889] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:44:49,896] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.237 seconds
[2021-09-07 16:45:20,277] {processor.py:162} INFO - Started process (PID=556) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:45:20,277] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:45:20,278] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,278] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:45:20,496] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:45:20,510] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,509] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:20,521] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,521] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:45:20,528] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.254 seconds
[2021-09-07 16:45:50,904] {processor.py:162} INFO - Started process (PID=623) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:45:50,906] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:45:50,906] {logging_mixin.py:109} INFO - [2021-09-07 16:45:50,906] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:45:51,156] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:45:51,175] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,175] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:51,185] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,184] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:45:51,192] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.289 seconds
[2021-09-07 16:46:21,661] {processor.py:162} INFO - Started process (PID=688) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:46:21,662] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:46:21,663] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,663] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:46:21,963] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:46:21,979] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,979] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:21,993] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,993] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:46:22,003] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.346 seconds
[2021-09-07 16:46:52,555] {processor.py:162} INFO - Started process (PID=754) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:46:52,556] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:46:52,557] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,557] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:46:52,779] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:46:52,790] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,789] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:52,797] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,797] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:46:52,803] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.251 seconds
[2021-09-07 16:47:23,171] {processor.py:162} INFO - Started process (PID=820) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:47:23,172] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:47:23,173] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,173] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:47:23,424] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:47:23,436] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,436] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:23,445] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,445] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:47:23,453] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.286 seconds
[2021-09-07 16:47:53,859] {processor.py:162} INFO - Started process (PID=886) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:47:53,859] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:47:53,860] {logging_mixin.py:109} INFO - [2021-09-07 16:47:53,860] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:47:54,080] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:47:54,091] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,090] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:54,100] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,100] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:47:54,107] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.250 seconds
[2021-09-07 16:48:24,490] {processor.py:162} INFO - Started process (PID=952) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:48:24,490] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:48:24,491] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,491] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:48:24,706] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:48:24,717] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,717] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:24,727] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,726] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:48:24,733] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.245 seconds
[2021-09-07 16:48:55,140] {processor.py:162} INFO - Started process (PID=1019) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:48:55,141] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:48:55,142] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,142] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:48:55,357] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:48:55,369] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,369] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:55,381] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,381] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:48:55,389] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.252 seconds
[2021-09-07 16:49:25,777] {processor.py:162} INFO - Started process (PID=1084) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:49:25,779] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:49:25,779] {logging_mixin.py:109} INFO - [2021-09-07 16:49:25,779] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:49:26,002] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:49:26,015] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,015] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:26,023] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,023] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:49:26,030] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.257 seconds
[2021-09-07 16:49:56,446] {processor.py:162} INFO - Started process (PID=1150) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:49:56,447] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:49:56,448] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,448] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:49:56,646] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:49:56,657] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,657] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:56,666] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,666] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:49:56,672] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.230 seconds
[2021-09-07 16:50:27,045] {processor.py:162} INFO - Started process (PID=1217) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:50:27,047] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:50:27,048] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,048] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:50:27,265] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:50:27,277] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,276] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:27,286] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,286] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:50:27,292] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.250 seconds
[2021-09-07 16:50:57,697] {processor.py:162} INFO - Started process (PID=1284) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:50:57,698] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:50:57,698] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,698] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:50:57,924] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:50:57,936] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,936] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:57,945] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,945] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:50:57,952] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.258 seconds
[2021-09-07 16:51:28,377] {processor.py:162} INFO - Started process (PID=1351) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:51:28,378] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:51:28,379] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,379] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:51:28,598] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:51:28,609] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,609] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:28,618] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,618] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:51:28,625] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.253 seconds
[2021-09-07 16:51:59,003] {processor.py:162} INFO - Started process (PID=1416) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:51:59,004] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:51:59,005] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,005] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:51:59,217] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:51:59,228] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,228] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:59,237] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,236] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:51:59,242] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.243 seconds
[2021-09-07 16:52:29,613] {processor.py:162} INFO - Started process (PID=1483) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:52:29,614] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:52:29,615] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,615] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:52:29,834] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:52:29,846] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,846] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:52:29,854] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,854] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:52:29,861] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.252 seconds
[2021-09-07 16:53:00,247] {processor.py:162} INFO - Started process (PID=1549) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:53:00,248] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:53:00,248] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,248] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:53:00,467] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:53:00,479] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,479] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:00,487] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,487] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:53:00,494] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.251 seconds
[2021-09-07 16:53:30,855] {processor.py:162} INFO - Started process (PID=1616) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:53:30,856] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:53:30,857] {logging_mixin.py:109} INFO - [2021-09-07 16:53:30,857] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:53:31,082] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:53:31,094] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,094] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:31,102] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,102] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:53:31,109] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.257 seconds
[2021-09-07 16:54:01,460] {processor.py:162} INFO - Started process (PID=1683) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:54:01,461] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:54:01,462] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,462] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:54:01,676] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:54:01,687] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,687] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:01,695] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,695] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:54:01,702] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.245 seconds
[2021-09-07 16:54:32,081] {processor.py:162} INFO - Started process (PID=1749) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:54:32,082] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:54:32,083] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,083] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:54:32,301] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:54:32,312] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,312] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:32,320] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,320] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:54:32,327] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.249 seconds
[2021-09-07 16:55:02,693] {processor.py:162} INFO - Started process (PID=1815) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:55:02,695] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:55:02,696] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,696] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:55:02,917] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:55:02,929] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,929] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:02,938] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,938] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:55:02,945] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.256 seconds
[2021-09-07 16:55:33,361] {processor.py:162} INFO - Started process (PID=1882) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:55:33,362] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:55:33,363] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,362] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:55:33,584] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:55:33,595] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,595] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:33,603] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,603] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:55:33,609] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.253 seconds
[2021-09-07 16:56:04,034] {processor.py:162} INFO - Started process (PID=1948) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:56:04,035] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:56:04,036] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,036] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:56:04,250] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:56:04,262] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,262] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:04,272] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,272] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:56:04,279] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.249 seconds
[2021-09-07 16:56:34,652] {processor.py:162} INFO - Started process (PID=2014) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:56:34,653] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:56:34,653] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,653] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:56:34,868] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:56:34,879] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,879] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:34,887] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,887] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:56:34,894] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.246 seconds
[2021-09-07 16:57:05,279] {processor.py:162} INFO - Started process (PID=2080) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:57:05,280] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:57:05,280] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,280] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:57:05,495] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:57:05,507] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,507] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:05,516] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,516] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:57:05,522] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.247 seconds
[2021-09-07 16:57:35,939] {processor.py:162} INFO - Started process (PID=2147) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:57:35,940] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:57:35,940] {logging_mixin.py:109} INFO - [2021-09-07 16:57:35,940] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:57:36,160] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:57:36,171] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,171] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:36,180] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,180] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:57:36,187] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.251 seconds
[2021-09-07 16:58:06,598] {processor.py:162} INFO - Started process (PID=2212) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:58:06,599] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:58:06,600] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,600] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:58:06,814] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:58:06,825] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,825] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:06,833] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,833] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:58:06,840] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.245 seconds
[2021-09-07 16:58:37,245] {processor.py:162} INFO - Started process (PID=2279) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:58:37,246] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:58:37,247] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,247] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:58:37,541] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:58:37,565] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,565] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:37,580] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,580] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:58:37,588] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.347 seconds
[2021-09-07 16:59:08,136] {processor.py:162} INFO - Started process (PID=2344) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:59:08,137] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:59:08,138] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,138] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:59:08,351] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:59:08,364] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,363] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:08,374] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,374] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:59:08,381] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.248 seconds
[2021-09-07 16:59:38,797] {processor.py:162} INFO - Started process (PID=2410) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:59:38,798] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 16:59:38,799] {logging_mixin.py:109} INFO - [2021-09-07 16:59:38,798] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:59:39,020] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 16:59:39,032] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,032] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:39,040] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,039] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 16:59:39,047] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.254 seconds
[2021-09-07 17:00:09,470] {processor.py:162} INFO - Started process (PID=2477) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:00:09,472] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:00:09,473] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,473] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:00:09,689] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:00:09,700] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,699] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:09,708] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,707] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:00:09,714] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.247 seconds
[2021-09-07 17:00:40,124] {processor.py:162} INFO - Started process (PID=2542) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:00:40,125] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:00:40,125] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,125] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:00:40,340] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:00:40,354] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,354] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:40,364] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,364] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:00:40,371] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.250 seconds
[2021-09-07 17:01:10,780] {processor.py:162} INFO - Started process (PID=2608) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:01:10,781] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:01:10,781] {logging_mixin.py:109} INFO - [2021-09-07 17:01:10,781] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:01:11,007] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:01:11,019] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,019] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:11,028] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,028] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:01:11,034] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.256 seconds
[2021-09-07 17:01:41,454] {processor.py:162} INFO - Started process (PID=2674) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:01:41,455] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:01:41,455] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,455] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:01:41,683] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:01:41,695] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,695] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:41,703] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,703] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:01:41,710] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.260 seconds
[2021-09-07 17:02:12,191] {processor.py:162} INFO - Started process (PID=2740) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:02:12,192] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:02:12,192] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,192] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:02:12,400] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:02:12,411] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,411] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:12,419] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,419] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:02:12,425] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.236 seconds
[2021-09-07 17:02:42,830] {processor.py:162} INFO - Started process (PID=2806) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:02:42,831] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:02:42,832] {logging_mixin.py:109} INFO - [2021-09-07 17:02:42,832] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:02:43,085] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:02:43,103] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,103] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:43,118] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,118] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:02:43,131] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.304 seconds
[2021-09-07 17:03:13,676] {processor.py:162} INFO - Started process (PID=2873) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:03:13,677] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:03:13,677] {logging_mixin.py:109} INFO - [2021-09-07 17:03:13,677] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:03:13,985] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:03:14,001] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,001] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:14,016] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,016] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:03:14,030] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.357 seconds
[2021-09-07 17:03:44,582] {processor.py:162} INFO - Started process (PID=2939) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:03:44,583] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:03:44,583] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,583] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:03:44,898] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:03:44,913] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,912] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:44,925] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,925] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:03:44,937] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.358 seconds
[2021-09-07 17:04:15,474] {processor.py:162} INFO - Started process (PID=3005) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:04:15,475] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:04:15,476] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,476] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:04:15,708] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:04:15,721] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,721] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:15,729] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,729] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:04:15,736] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.265 seconds
[2021-09-07 17:04:46,196] {processor.py:162} INFO - Started process (PID=3072) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:04:46,198] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:04:46,198] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,198] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:04:46,447] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:04:46,459] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,459] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:46,470] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,470] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:04:46,477] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.285 seconds
[2021-09-07 17:05:16,949] {processor.py:162} INFO - Started process (PID=3138) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:05:16,950] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:05:16,951] {logging_mixin.py:109} INFO - [2021-09-07 17:05:16,951] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:05:17,164] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:05:17,176] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,176] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:05:17,186] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,186] {dag.py:2306} INFO - Setting next_dagrun for hello_gdive to 2021-08-14 17:00:00+00:00
[2021-09-07 17:05:17,194] {processor.py:170} INFO - Processing /usr/local/airflow/dags/connect_to_gdrive.py took 0.249 seconds
[2021-09-07 17:05:47,664] {processor.py:162} INFO - Started process (PID=3205) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:05:47,665] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:05:47,665] {logging_mixin.py:109} INFO - [2021-09-07 17:05:47,665] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:05:47,876] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:05:48,134] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:18,760] {processor.py:162} INFO - Started process (PID=3280) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:06:18,762] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:06:18,762] {logging_mixin.py:109} INFO - [2021-09-07 17:06:18,762] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:06:18,976] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:06:19,914] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:50,600] {processor.py:162} INFO - Started process (PID=3351) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:06:50,601] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:06:50,602] {logging_mixin.py:109} INFO - [2021-09-07 17:06:50,602] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:06:50,841] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:06:51,200] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:21,238] {processor.py:162} INFO - Started process (PID=3415) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:07:21,239] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:07:21,239] {logging_mixin.py:109} INFO - [2021-09-07 17:07:21,239] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:07:21,479] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:07:22,495] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:52,999] {processor.py:162} INFO - Started process (PID=3498) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:07:53,000] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:07:53,001] {logging_mixin.py:109} INFO - [2021-09-07 17:07:53,001] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:07:53,229] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:07:53,942] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:24,380] {processor.py:162} INFO - Started process (PID=3567) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:08:24,381] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:08:24,382] {logging_mixin.py:109} INFO - [2021-09-07 17:08:24,382] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:08:24,587] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:08:25,272] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:55,802] {processor.py:162} INFO - Started process (PID=3629) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:08:55,803] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:08:55,804] {logging_mixin.py:109} INFO - [2021-09-07 17:08:55,804] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:08:56,010] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:08:56,953] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:27,295] {processor.py:162} INFO - Started process (PID=3695) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:09:27,296] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:09:27,297] {logging_mixin.py:109} INFO - [2021-09-07 17:09:27,297] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:09:27,545] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:09:28,579] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:58,819] {processor.py:162} INFO - Started process (PID=3768) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:09:58,820] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:09:58,821] {logging_mixin.py:109} INFO - [2021-09-07 17:09:58,821] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:09:59,025] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:10:00,306] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:30,825] {processor.py:162} INFO - Started process (PID=3834) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:10:30,827] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:10:30,828] {logging_mixin.py:109} INFO - [2021-09-07 17:10:30,828] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:10:31,030] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:10:31,473] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:01,530] {processor.py:162} INFO - Started process (PID=3903) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:11:01,531] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:11:01,532] {logging_mixin.py:109} INFO - [2021-09-07 17:11:01,531] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:11:01,731] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:11:02,214] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:32,471] {processor.py:162} INFO - Started process (PID=3964) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:11:32,473] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:11:32,474] {logging_mixin.py:109} INFO - [2021-09-07 17:11:32,474] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:11:32,742] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:11:33,781] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:04,076] {processor.py:162} INFO - Started process (PID=4030) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:12:04,077] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:12:04,077] {logging_mixin.py:109} INFO - [2021-09-07 17:12:04,077] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:12:04,267] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:12:05,134] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:35,697] {processor.py:162} INFO - Started process (PID=4096) to work on /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:12:35,698] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/connect_to_gdrive.py for tasks to queue
[2021-09-07 17:12:35,699] {logging_mixin.py:109} INFO - [2021-09-07 17:12:35,699] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:12:35,905] {processor.py:623} INFO - DAG(s) dict_keys(['hello_gdive']) retrieved from /usr/local/airflow/dags/connect_to_gdrive.py
[2021-09-07 17:12:36,351] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
