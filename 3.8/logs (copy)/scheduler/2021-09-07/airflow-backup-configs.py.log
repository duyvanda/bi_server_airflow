[2021-09-07 10:34:52,696] {processor.py:162} INFO - Started process (PID=211) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 10:34:52,697] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 10:34:52,697] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,697] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 10:34:52,712] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,712] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 10:34:52,717] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 10:34:52,720] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,720] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 10:34:52,732] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,732] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 10:34:52,738] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:42:47,525] {processor.py:162} INFO - Started process (PID=211) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:42:47,525] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:42:47,526] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,526] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:42:47,540] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,540] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:42:47,545] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:42:47,552] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,552] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:42:47,566] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,566] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:42:47,574] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.052 seconds
[2021-09-07 16:43:18,181] {processor.py:162} INFO - Started process (PID=325) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:43:18,182] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:43:18,182] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,182] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:43:18,196] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,196] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:43:18,199] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:43:18,206] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,206] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:18,217] {logging_mixin.py:109} INFO - [2021-09-07 16:43:18,217] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:43:18,224] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.045 seconds
[2021-09-07 16:43:48,798] {processor.py:162} INFO - Started process (PID=391) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:43:48,798] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:43:48,799] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,799] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:43:48,812] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,812] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:43:48,815] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:43:48,822] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,821] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:48,833] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,833] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:43:48,839] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 16:44:19,409] {processor.py:162} INFO - Started process (PID=458) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:44:19,409] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:44:19,410] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,410] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:44:19,423] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,423] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:44:19,427] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:44:19,433] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,433] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:19,444] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,444] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:44:19,449] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 16:44:50,030] {processor.py:162} INFO - Started process (PID=524) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:44:50,030] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:44:50,031] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,030] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:44:50,044] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,044] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:44:50,048] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:44:50,054] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,054] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:50,065] {logging_mixin.py:109} INFO - [2021-09-07 16:44:50,065] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:44:50,072] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:45:20,681] {processor.py:162} INFO - Started process (PID=591) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:45:20,682] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:45:20,682] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,682] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:45:20,696] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,696] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:45:20,700] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:45:20,706] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,706] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:20,717] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,717] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:45:20,723] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:45:51,339] {processor.py:162} INFO - Started process (PID=658) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:45:51,339] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:45:51,340] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,340] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:45:51,354] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,354] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:45:51,358] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:45:51,364] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,364] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:51,376] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,376] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:45:51,382] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.046 seconds
[2021-09-07 16:46:22,235] {processor.py:162} INFO - Started process (PID=724) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:46:22,237] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:46:22,237] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,237] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:46:22,260] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,260] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:46:22,268] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:46:22,281] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,280] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:22,301] {logging_mixin.py:109} INFO - [2021-09-07 16:46:22,301] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:46:22,311] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.080 seconds
[2021-09-07 16:46:52,947] {processor.py:162} INFO - Started process (PID=790) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:46:52,948] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:46:52,948] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,948] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:46:52,962] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,962] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:46:52,967] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:46:52,975] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,974] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:52,987] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,987] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:46:52,993] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.048 seconds
[2021-09-07 16:47:23,560] {processor.py:162} INFO - Started process (PID=856) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:47:23,561] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:47:23,561] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,561] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:47:23,576] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,576] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:47:23,580] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:47:23,588] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,588] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:23,600] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,600] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:47:23,607] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.049 seconds
[2021-09-07 16:47:54,258] {processor.py:162} INFO - Started process (PID=922) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:47:54,259] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:47:54,259] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,259] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:47:54,272] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,272] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:47:54,276] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:47:54,282] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,282] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:54,293] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,293] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:47:54,300] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:48:24,876] {processor.py:162} INFO - Started process (PID=988) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:48:24,876] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:48:24,877] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,877] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:48:24,891] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,890] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:48:24,894] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:48:24,900] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,900] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:24,911] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,911] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:48:24,917] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 16:48:55,545] {processor.py:162} INFO - Started process (PID=1054) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:48:55,546] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:48:55,546] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,546] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:48:55,560] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,560] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:48:55,564] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:48:55,570] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,570] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:55,581] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,581] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:48:55,587] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:49:26,189] {processor.py:162} INFO - Started process (PID=1120) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:49:26,189] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:49:26,190] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,190] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:49:26,204] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,204] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:49:26,208] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:49:26,214] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,214] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:26,224] {logging_mixin.py:109} INFO - [2021-09-07 16:49:26,224] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:49:26,230] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:49:56,817] {processor.py:162} INFO - Started process (PID=1186) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:49:56,818] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:49:56,819] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,819] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:49:56,834] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,834] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:49:56,837] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:49:56,844] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,844] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:56,854] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,854] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:49:56,861] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.046 seconds
[2021-09-07 16:50:27,447] {processor.py:162} INFO - Started process (PID=1252) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:50:27,448] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:50:27,448] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,448] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:50:27,461] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,461] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:50:27,465] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:50:27,472] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,472] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:27,482] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,482] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:50:27,488] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:50:58,101] {processor.py:162} INFO - Started process (PID=1319) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:50:58,102] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:50:58,102] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,102] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:50:58,117] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,117] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:50:58,121] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:50:58,128] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,128] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:58,141] {logging_mixin.py:109} INFO - [2021-09-07 16:50:58,141] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:50:58,149] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.050 seconds
[2021-09-07 16:51:28,780] {processor.py:162} INFO - Started process (PID=1386) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:51:28,781] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:51:28,781] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,781] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:51:28,796] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,796] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:51:28,800] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:51:28,806] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,806] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:28,817] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,817] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:51:28,823] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.046 seconds
[2021-09-07 16:51:59,383] {processor.py:162} INFO - Started process (PID=1452) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:51:59,384] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:51:59,384] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,384] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:51:59,398] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,398] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:51:59,402] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:51:59,408] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,408] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:59,419] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,419] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:51:59,425] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:52:30,007] {processor.py:162} INFO - Started process (PID=1519) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:52:30,008] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:52:30,008] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,008] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:52:30,022] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,022] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:52:30,026] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:52:30,032] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,032] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:52:30,043] {logging_mixin.py:109} INFO - [2021-09-07 16:52:30,043] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:52:30,049] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 16:53:00,638] {processor.py:162} INFO - Started process (PID=1585) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:53:00,638] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:53:00,639] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,639] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:53:00,652] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,652] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:53:00,656] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:53:00,662] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,662] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:00,673] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,673] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:53:00,680] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:53:31,238] {processor.py:162} INFO - Started process (PID=1652) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:53:31,238] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:53:31,239] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,239] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:53:31,253] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,252] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:53:31,256] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:53:31,263] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,263] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:31,274] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,274] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:53:31,282] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.046 seconds
[2021-09-07 16:54:01,858] {processor.py:162} INFO - Started process (PID=1719) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:54:01,859] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:54:01,859] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,859] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:54:01,873] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,872] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:54:01,876] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:54:01,882] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,882] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:01,894] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,894] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:54:01,900] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:54:32,464] {processor.py:162} INFO - Started process (PID=1785) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:54:32,464] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:54:32,465] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,465] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:54:32,478] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,478] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:54:32,482] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:54:32,488] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,488] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:32,500] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,499] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:54:32,506] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:55:03,083] {processor.py:162} INFO - Started process (PID=1851) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:55:03,084] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:55:03,084] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,084] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:55:03,098] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,098] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:55:03,101] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:55:03,108] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,108] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:03,119] {logging_mixin.py:109} INFO - [2021-09-07 16:55:03,119] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:55:03,126] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.045 seconds
[2021-09-07 16:55:33,775] {processor.py:162} INFO - Started process (PID=1918) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:55:33,776] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:55:33,776] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,776] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:55:33,790] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,790] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:55:33,793] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:55:33,799] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,799] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:33,810] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,810] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:55:33,816] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 16:56:04,420] {processor.py:162} INFO - Started process (PID=1984) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:56:04,420] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:56:04,420] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,420] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:56:04,434] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,434] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:56:04,438] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:56:04,444] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,444] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:04,455] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,455] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:56:04,462] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:56:35,044] {processor.py:162} INFO - Started process (PID=2050) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:56:35,045] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:56:35,045] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,045] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:56:35,059] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,059] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:56:35,063] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:56:35,069] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,069] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:35,080] {logging_mixin.py:109} INFO - [2021-09-07 16:56:35,080] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:56:35,087] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:57:05,682] {processor.py:162} INFO - Started process (PID=2116) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:57:05,683] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:57:05,683] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,683] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:57:05,697] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,697] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:57:05,701] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:57:05,707] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,706] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:05,717] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,717] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:57:05,723] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 16:57:36,332] {processor.py:162} INFO - Started process (PID=2182) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:57:36,333] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:57:36,333] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,333] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:57:36,349] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,349] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:57:36,353] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:57:36,359] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,359] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:36,371] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,371] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:57:36,377] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.049 seconds
[2021-09-07 16:58:06,986] {processor.py:162} INFO - Started process (PID=2248) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:58:06,986] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:58:06,987] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,987] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:58:07,001] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,000] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:58:07,004] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:58:07,011] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,010] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:07,021] {logging_mixin.py:109} INFO - [2021-09-07 16:58:07,021] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:58:07,028] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 16:58:37,812] {processor.py:162} INFO - Started process (PID=2314) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:58:37,812] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:58:37,813] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,813] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:58:37,831] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,831] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:58:37,836] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:58:37,844] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,844] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:37,857] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,857] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:58:37,865] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.055 seconds
[2021-09-07 16:59:08,528] {processor.py:162} INFO - Started process (PID=2380) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:59:08,528] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:59:08,529] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,529] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:59:08,542] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,542] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:59:08,546] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:59:08,552] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,552] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:08,563] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,563] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:59:08,569] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 16:59:39,205] {processor.py:162} INFO - Started process (PID=2446) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:59:39,206] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 16:59:39,206] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,206] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:59:39,220] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,220] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 16:59:39,224] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 16:59:39,230] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,230] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:39,241] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,241] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 16:59:39,248] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 17:00:09,857] {processor.py:162} INFO - Started process (PID=2512) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:00:09,859] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:00:09,859] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,859] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:00:09,872] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,872] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:00:09,876] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:00:09,883] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,883] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:09,895] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,895] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:00:09,902] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.047 seconds
[2021-09-07 17:00:40,532] {processor.py:162} INFO - Started process (PID=2578) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:00:40,532] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:00:40,533] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,533] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:00:40,546] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,546] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:00:40,550] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:00:40,556] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,556] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:40,567] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,567] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:00:40,573] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 17:01:11,198] {processor.py:162} INFO - Started process (PID=2644) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:01:11,199] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:01:11,199] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,199] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:01:11,213] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,213] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:01:11,216] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:01:11,222] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,222] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:11,233] {logging_mixin.py:109} INFO - [2021-09-07 17:01:11,233] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:01:11,239] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.042 seconds
[2021-09-07 17:01:41,864] {processor.py:162} INFO - Started process (PID=2710) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:01:41,865] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:01:41,865] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,865] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:01:41,879] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,879] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:01:41,883] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:01:41,890] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,890] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:41,901] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,901] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:01:41,907] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.045 seconds
[2021-09-07 17:02:12,572] {processor.py:162} INFO - Started process (PID=2776) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:02:12,572] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:02:12,573] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,573] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:02:12,586] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,586] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:02:12,590] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:02:12,596] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,596] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:12,608] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,608] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:02:12,614] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.044 seconds
[2021-09-07 17:02:43,361] {processor.py:162} INFO - Started process (PID=2842) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:02:43,361] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:02:43,362] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,362] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:02:43,378] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,377] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:02:43,383] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:02:43,392] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,392] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:43,408] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,407] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:02:43,417] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.058 seconds
[2021-09-07 17:03:14,309] {processor.py:162} INFO - Started process (PID=2908) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:03:14,310] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:03:14,311] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,311] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:03:14,326] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,326] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:03:14,331] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:03:14,339] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,339] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:14,351] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,351] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:03:14,358] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.051 seconds
[2021-09-07 17:03:45,208] {processor.py:162} INFO - Started process (PID=2974) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:03:45,209] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:03:45,210] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,210] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:03:45,227] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,227] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:03:45,233] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:03:45,240] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,240] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:45,256] {logging_mixin.py:109} INFO - [2021-09-07 17:03:45,256] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:03:45,267] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.062 seconds
[2021-09-07 17:04:15,923] {processor.py:162} INFO - Started process (PID=3041) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:04:15,923] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:04:15,924] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,924] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:04:15,938] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,938] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:04:15,942] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:04:15,948] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,948] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:15,960] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,960] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:04:15,967] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.046 seconds
[2021-09-07 17:04:46,699] {processor.py:162} INFO - Started process (PID=3107) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:04:46,700] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:04:46,700] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,700] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:04:46,715] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,715] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:04:46,719] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:04:46,725] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,725] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:46,738] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,738] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:04:46,744] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.047 seconds
[2021-09-07 17:05:17,397] {processor.py:162} INFO - Started process (PID=3174) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:05:17,398] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:05:17,398] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,398] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:05:17,411] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,411] {configuration.py:365} WARNING - section/key [core/base_log_folder] not found in config
[2021-09-07 17:05:17,415] {processor.py:623} INFO - DAG(s) dict_keys(['airflow-backup-configs']) retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:05:17,421] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,421] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:05:17,432] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,432] {dag.py:2306} INFO - Setting next_dagrun for airflow-backup-configs to 2021-09-06 00:00:00+00:00
[2021-09-07 17:05:17,438] {processor.py:170} INFO - Processing /usr/local/airflow/dags/airflow-backup-configs.py took 0.043 seconds
[2021-09-07 17:05:49,376] {processor.py:162} INFO - Started process (PID=3247) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:05:49,377] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:05:49,377] {logging_mixin.py:109} INFO - [2021-09-07 17:05:49,377] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:05:49,392] {logging_mixin.py:109} INFO - [2021-09-07 17:05:49,388] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:05:49,393] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:05:49,396] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:20,022] {processor.py:162} INFO - Started process (PID=3308) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:06:20,023] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:06:20,024] {logging_mixin.py:109} INFO - [2021-09-07 17:06:20,024] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:06:20,038] {logging_mixin.py:109} INFO - [2021-09-07 17:06:20,034] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:20,038] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:06:20,042] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:51,321] {processor.py:162} INFO - Started process (PID=3369) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:06:51,323] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:06:51,325] {logging_mixin.py:109} INFO - [2021-09-07 17:06:51,325] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:06:51,343] {logging_mixin.py:109} INFO - [2021-09-07 17:06:51,337] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:51,344] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:06:51,347] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:21,461] {processor.py:162} INFO - Started process (PID=3430) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:07:21,461] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:07:21,462] {logging_mixin.py:109} INFO - [2021-09-07 17:07:21,462] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:07:21,478] {logging_mixin.py:109} INFO - [2021-09-07 17:07:21,471] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:21,479] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:07:21,483] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:51,954] {processor.py:162} INFO - Started process (PID=3491) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:07:51,955] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:07:51,955] {logging_mixin.py:109} INFO - [2021-09-07 17:07:51,955] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:07:51,969] {logging_mixin.py:109} INFO - [2021-09-07 17:07:51,965] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:51,970] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:07:51,973] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:22,332] {processor.py:162} INFO - Started process (PID=3554) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:08:22,332] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:08:22,333] {logging_mixin.py:109} INFO - [2021-09-07 17:08:22,333] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:08:22,347] {logging_mixin.py:109} INFO - [2021-09-07 17:08:22,342] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:22,347] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:08:22,350] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:52,781] {processor.py:162} INFO - Started process (PID=3621) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:08:52,782] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:08:52,782] {logging_mixin.py:109} INFO - [2021-09-07 17:08:52,782] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:08:52,792] {logging_mixin.py:109} INFO - [2021-09-07 17:08:52,789] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:52,793] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:08:52,795] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:23,262] {processor.py:162} INFO - Started process (PID=3687) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:09:23,263] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:09:23,263] {logging_mixin.py:109} INFO - [2021-09-07 17:09:23,263] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:09:23,273] {logging_mixin.py:109} INFO - [2021-09-07 17:09:23,270] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:23,273] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:09:23,275] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:53,372] {processor.py:162} INFO - Started process (PID=3753) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:09:53,373] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:09:53,373] {logging_mixin.py:109} INFO - [2021-09-07 17:09:53,373] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:09:53,388] {logging_mixin.py:109} INFO - [2021-09-07 17:09:53,384] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:53,389] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:09:53,392] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:23,607] {processor.py:162} INFO - Started process (PID=3819) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:10:23,608] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:10:23,609] {logging_mixin.py:109} INFO - [2021-09-07 17:10:23,609] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:10:23,623] {logging_mixin.py:109} INFO - [2021-09-07 17:10:23,620] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:23,624] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:10:23,627] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:53,654] {processor.py:162} INFO - Started process (PID=3885) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:10:53,655] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:10:53,656] {logging_mixin.py:109} INFO - [2021-09-07 17:10:53,656] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:10:53,669] {logging_mixin.py:109} INFO - [2021-09-07 17:10:53,666] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:53,670] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:10:53,672] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:23,830] {processor.py:162} INFO - Started process (PID=3951) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:11:23,831] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:11:23,832] {logging_mixin.py:109} INFO - [2021-09-07 17:11:23,832] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:11:23,848] {logging_mixin.py:109} INFO - [2021-09-07 17:11:23,844] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:23,849] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:11:23,854] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:54,306] {processor.py:162} INFO - Started process (PID=4017) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:11:54,307] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:11:54,308] {logging_mixin.py:109} INFO - [2021-09-07 17:11:54,308] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:11:54,326] {logging_mixin.py:109} INFO - [2021-09-07 17:11:54,321] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:54,327] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:11:54,330] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:24,634] {processor.py:162} INFO - Started process (PID=4083) to work on /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:12:24,634] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/airflow-backup-configs.py for tasks to queue
[2021-09-07 17:12:24,635] {logging_mixin.py:109} INFO - [2021-09-07 17:12:24,634] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:12:24,646] {logging_mixin.py:109} INFO - [2021-09-07 17:12:24,642] {dagbag.py:329} ERROR - Failed to import: /usr/local/airflow/dags/airflow-backup-configs.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 326, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 848, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/airflow/dags/airflow-backup-configs.py", line 27, in <module>
    BACKUP_HOME_DIRECTORY = Variable.get("airflow_backup_config__backup_home_directory", "/tmp/airflow_backups")
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 135, in get
    var_val = Variable.get_variable_from_secrets(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/variable.py", line 204, in get_variable_from_secrets
    var_val = secrets_backend.get_variable(key=key)
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/secrets/metastore.py", line 64, in get_variable
    var_value = session.query(Variable).filter(Variable.key == key).first()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3429, in first
    ret = list(self[0:1])
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3203, in __getitem__
    return list(res)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:24,647] {processor.py:625} WARNING - No viable dags retrieved from /usr/local/airflow/dags/airflow-backup-configs.py
[2021-09-07 17:12:24,650] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 626, in process_file
    self.update_import_errors(session, dagbag)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 517, in update_import_errors
    session.query(errors.ImportError).filter(errors.ImportError.filename == dagbag_file).delete()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3926, in delete
    delete_op.exec_()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1697, in exec_
    self._do_exec()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1930, in _do_exec
    self._execute_stmt(delete_stmt)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/persistence.py", line 1702, in _execute_stmt
    self.result = self.query._execute_crud(stmt, self.mapper)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3564, in _execute_crud
    conn = self._connection_from_session(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
