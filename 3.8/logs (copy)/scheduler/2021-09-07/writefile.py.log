[2021-09-07 10:34:52,442] {processor.py:162} INFO - Started process (PID=181) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 10:34:52,443] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 10:34:52,443] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,443] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 10:34:52,456] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 10:34:52,476] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,475] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 10:34:52,486] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,486] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 10:34:52,494] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.054 seconds
[2021-09-07 16:42:47,216] {processor.py:162} INFO - Started process (PID=181) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:42:47,217] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:42:47,217] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,217] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:42:47,228] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:42:47,242] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,242] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:42:47,252] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,252] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:42:47,260] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.048 seconds
[2021-09-07 16:43:17,910] {processor.py:162} INFO - Started process (PID=295) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:43:17,911] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:43:17,911] {logging_mixin.py:109} INFO - [2021-09-07 16:43:17,911] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:43:17,919] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:43:17,932] {logging_mixin.py:109} INFO - [2021-09-07 16:43:17,932] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:17,940] {logging_mixin.py:109} INFO - [2021-09-07 16:43:17,940] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:43:17,946] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:43:48,520] {processor.py:162} INFO - Started process (PID=361) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:43:48,520] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:43:48,521] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,521] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:43:48,529] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:43:48,541] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,541] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:48,550] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,550] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:43:48,556] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:44:19,118] {processor.py:162} INFO - Started process (PID=428) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:44:19,119] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:44:19,119] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,119] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:44:19,128] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:44:19,141] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,141] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:19,149] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,149] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:44:19,156] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.040 seconds
[2021-09-07 16:44:49,754] {processor.py:162} INFO - Started process (PID=494) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:44:49,755] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:44:49,755] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,755] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:44:49,764] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:44:49,776] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,776] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:49,784] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,784] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:44:49,791] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:45:20,367] {processor.py:162} INFO - Started process (PID=561) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:45:20,368] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:45:20,369] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,369] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:45:20,377] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:45:20,391] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,391] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:20,400] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,400] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:45:20,407] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.042 seconds
[2021-09-07 16:45:51,036] {processor.py:162} INFO - Started process (PID=628) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:45:51,036] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:45:51,037] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,037] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:45:51,049] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:45:51,066] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,066] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:51,078] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,078] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:45:51,086] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.052 seconds
[2021-09-07 16:46:21,827] {processor.py:162} INFO - Started process (PID=694) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:46:21,827] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:46:21,828] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,827] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:46:21,843] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:46:21,863] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,863] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:21,879] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,878] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:46:21,892] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.069 seconds
[2021-09-07 16:46:52,668] {processor.py:162} INFO - Started process (PID=760) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:46:52,668] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:46:52,669] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,669] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:46:52,677] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:46:52,690] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,690] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:52,699] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,699] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:46:52,706] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.040 seconds
[2021-09-07 16:47:23,270] {processor.py:162} INFO - Started process (PID=826) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:47:23,270] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:47:23,271] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,271] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:47:23,280] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:47:23,294] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,294] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:23,303] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,303] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:47:23,309] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.041 seconds
[2021-09-07 16:47:53,967] {processor.py:162} INFO - Started process (PID=892) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:47:53,968] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:47:53,968] {logging_mixin.py:109} INFO - [2021-09-07 16:47:53,968] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:47:53,976] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:47:53,990] {logging_mixin.py:109} INFO - [2021-09-07 16:47:53,990] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:54,000] {logging_mixin.py:109} INFO - [2021-09-07 16:47:53,999] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:47:54,006] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.041 seconds
[2021-09-07 16:48:24,597] {processor.py:162} INFO - Started process (PID=958) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:48:24,598] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:48:24,598] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,598] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:48:24,606] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:48:24,619] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,619] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:24,627] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,627] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:48:24,633] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:48:55,246] {processor.py:162} INFO - Started process (PID=1024) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:48:55,246] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:48:55,247] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,247] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:48:55,255] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:48:55,268] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,268] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:55,276] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,276] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:48:55,283] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 16:49:25,888] {processor.py:162} INFO - Started process (PID=1090) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:49:25,888] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:49:25,889] {logging_mixin.py:109} INFO - [2021-09-07 16:49:25,889] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:49:25,898] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:49:25,912] {logging_mixin.py:109} INFO - [2021-09-07 16:49:25,912] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:25,921] {logging_mixin.py:109} INFO - [2021-09-07 16:49:25,921] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:49:25,927] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.041 seconds
[2021-09-07 16:49:56,544] {processor.py:162} INFO - Started process (PID=1156) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:49:56,545] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:49:56,545] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,545] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:49:56,554] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:49:56,567] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,567] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:56,575] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,575] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:49:56,582] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.040 seconds
[2021-09-07 16:50:27,152] {processor.py:162} INFO - Started process (PID=1222) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:50:27,153] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:50:27,153] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,153] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:50:27,161] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:50:27,175] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,175] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:27,183] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,183] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:50:27,190] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.040 seconds
[2021-09-07 16:50:57,810] {processor.py:162} INFO - Started process (PID=1289) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:50:57,810] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:50:57,811] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,811] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:50:57,820] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:50:57,834] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,834] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:57,844] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,844] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:50:57,851] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.044 seconds
[2021-09-07 16:51:28,486] {processor.py:162} INFO - Started process (PID=1356) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:51:28,487] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:51:28,487] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,487] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:51:28,496] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:51:28,510] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,510] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:28,519] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,519] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:51:28,525] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.041 seconds
[2021-09-07 16:51:59,112] {processor.py:162} INFO - Started process (PID=1422) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:51:59,113] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:51:59,114] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,114] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:51:59,122] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:51:59,135] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,134] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:59,143] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,143] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:51:59,150] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.040 seconds
[2021-09-07 16:52:29,723] {processor.py:162} INFO - Started process (PID=1489) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:52:29,724] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:52:29,724] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,724] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:52:29,732] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:52:29,745] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,745] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:52:29,754] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,754] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:52:29,760] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 16:53:00,350] {processor.py:162} INFO - Started process (PID=1555) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:53:00,351] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:53:00,351] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,351] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:53:00,360] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:53:00,372] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,372] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:00,380] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,380] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:53:00,386] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:53:30,957] {processor.py:162} INFO - Started process (PID=1622) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:53:30,957] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:53:30,958] {logging_mixin.py:109} INFO - [2021-09-07 16:53:30,958] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:53:30,966] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:53:30,981] {logging_mixin.py:109} INFO - [2021-09-07 16:53:30,981] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:30,989] {logging_mixin.py:109} INFO - [2021-09-07 16:53:30,989] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:53:30,996] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.041 seconds
[2021-09-07 16:54:01,574] {processor.py:162} INFO - Started process (PID=1689) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:54:01,575] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:54:01,575] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,575] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:54:01,583] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:54:01,595] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,595] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:01,604] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,604] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:54:01,610] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:54:32,184] {processor.py:162} INFO - Started process (PID=1755) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:54:32,185] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:54:32,185] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,185] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:54:32,194] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:54:32,208] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,208] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:32,216] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,216] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:54:32,222] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.040 seconds
[2021-09-07 16:55:02,802] {processor.py:162} INFO - Started process (PID=1821) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:55:02,803] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:55:02,804] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,804] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:55:02,811] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:55:02,824] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,824] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:02,832] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,832] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:55:02,838] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:55:33,474] {processor.py:162} INFO - Started process (PID=1888) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:55:33,474] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:55:33,474] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,474] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:55:33,482] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:55:33,495] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,495] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:33,504] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,503] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:55:33,510] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:56:04,144] {processor.py:162} INFO - Started process (PID=1954) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:56:04,144] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:56:04,145] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,145] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:56:04,153] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:56:04,166] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,166] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:04,174] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,174] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:56:04,180] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 16:56:34,769] {processor.py:162} INFO - Started process (PID=2020) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:56:34,770] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:56:34,770] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,770] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:56:34,778] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:56:34,791] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,791] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:34,799] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,799] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:56:34,806] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 16:57:05,385] {processor.py:162} INFO - Started process (PID=2086) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:57:05,386] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:57:05,386] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,386] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:57:05,394] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:57:05,406] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,406] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:05,415] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,414] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:57:05,421] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 16:57:36,038] {processor.py:162} INFO - Started process (PID=2152) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:57:36,038] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:57:36,039] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,039] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:57:36,047] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:57:36,060] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,060] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:36,069] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,069] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:57:36,075] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 16:58:06,709] {processor.py:162} INFO - Started process (PID=2218) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:58:06,710] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:58:06,710] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,710] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:58:06,718] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:58:06,731] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,731] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:06,739] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,739] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:58:06,746] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 16:58:37,382] {processor.py:162} INFO - Started process (PID=2284) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:58:37,383] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:58:37,383] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,383] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:58:37,393] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:58:37,413] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,413] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:37,428] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,428] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:58:37,435] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.055 seconds
[2021-09-07 16:59:08,249] {processor.py:162} INFO - Started process (PID=2350) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:59:08,249] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:59:08,250] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,250] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:59:08,258] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:59:08,272] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,272] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:08,280] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,280] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:59:08,287] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.040 seconds
[2021-09-07 16:59:38,912] {processor.py:162} INFO - Started process (PID=2416) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 16:59:38,912] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 16:59:38,913] {logging_mixin.py:109} INFO - [2021-09-07 16:59:38,913] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:59:38,921] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 16:59:38,934] {logging_mixin.py:109} INFO - [2021-09-07 16:59:38,933] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:38,942] {logging_mixin.py:109} INFO - [2021-09-07 16:59:38,942] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 16:59:38,948] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 17:00:09,579] {processor.py:162} INFO - Started process (PID=2482) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:00:09,580] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:00:09,580] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,580] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:00:09,588] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:00:09,601] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,601] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:09,609] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,609] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:00:09,615] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 17:00:40,230] {processor.py:162} INFO - Started process (PID=2548) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:00:40,231] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:00:40,231] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,231] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:00:40,239] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:00:40,252] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,252] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:40,260] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,260] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:00:40,267] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 17:01:10,902] {processor.py:162} INFO - Started process (PID=2614) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:01:10,902] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:01:10,903] {logging_mixin.py:109} INFO - [2021-09-07 17:01:10,903] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:01:10,911] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:01:10,924] {logging_mixin.py:109} INFO - [2021-09-07 17:01:10,924] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:10,933] {logging_mixin.py:109} INFO - [2021-09-07 17:01:10,933] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:01:10,939] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 17:01:41,558] {processor.py:162} INFO - Started process (PID=2680) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:01:41,559] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:01:41,559] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,559] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:01:41,567] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:01:41,580] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,580] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:41,589] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,589] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:01:41,595] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 17:02:12,297] {processor.py:162} INFO - Started process (PID=2746) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:02:12,297] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:02:12,298] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,298] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:02:12,306] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:02:12,319] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,319] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:12,328] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,328] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:02:12,334] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.039 seconds
[2021-09-07 17:02:42,948] {processor.py:162} INFO - Started process (PID=2812) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:02:42,948] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:02:42,949] {logging_mixin.py:109} INFO - [2021-09-07 17:02:42,949] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:02:42,960] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:02:42,974] {logging_mixin.py:109} INFO - [2021-09-07 17:02:42,974] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:42,984] {logging_mixin.py:109} INFO - [2021-09-07 17:02:42,984] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:02:42,994] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.048 seconds
[2021-09-07 17:03:13,916] {processor.py:162} INFO - Started process (PID=2878) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:03:13,917] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:03:13,917] {logging_mixin.py:109} INFO - [2021-09-07 17:03:13,917] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:03:13,933] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:03:13,957] {logging_mixin.py:109} INFO - [2021-09-07 17:03:13,957] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:13,971] {logging_mixin.py:109} INFO - [2021-09-07 17:03:13,971] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:03:13,980] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.066 seconds
[2021-09-07 17:03:44,787] {processor.py:162} INFO - Started process (PID=2944) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:03:44,788] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:03:44,789] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,788] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:03:44,799] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:03:44,815] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,815] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:44,825] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,825] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:03:44,836] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.050 seconds
[2021-09-07 17:04:15,621] {processor.py:162} INFO - Started process (PID=3011) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:04:15,622] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:04:15,622] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,622] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:04:15,630] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:04:15,643] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,643] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:15,651] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,651] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:04:15,657] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.038 seconds
[2021-09-07 17:04:46,359] {processor.py:162} INFO - Started process (PID=3077) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:04:46,360] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:04:46,360] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,360] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:04:46,371] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:04:46,385] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,385] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:46,394] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,394] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:04:46,402] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.045 seconds
[2021-09-07 17:05:17,094] {processor.py:162} INFO - Started process (PID=3144) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:05:17,095] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:05:17,096] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,096] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:05:17,103] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:05:17,116] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,116] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:05:17,125] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,125] {dag.py:2306} INFO - Setting next_dagrun for name_writefile to 2021-08-14 17:00:00+00:00
[2021-09-07 17:05:17,138] {processor.py:170} INFO - Processing /usr/local/airflow/dags/writefile.py took 0.045 seconds
[2021-09-07 17:05:47,704] {processor.py:162} INFO - Started process (PID=3211) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:05:47,705] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:05:47,706] {logging_mixin.py:109} INFO - [2021-09-07 17:05:47,705] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:05:47,718] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:05:48,401] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:18,764] {processor.py:162} INFO - Started process (PID=3282) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:06:18,765] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:06:18,766] {logging_mixin.py:109} INFO - [2021-09-07 17:06:18,766] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:06:18,780] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:06:19,384] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:49,557] {processor.py:162} INFO - Started process (PID=3346) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:06:49,557] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:06:49,558] {logging_mixin.py:109} INFO - [2021-09-07 17:06:49,558] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:06:49,570] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:06:49,773] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:20,234] {processor.py:162} INFO - Started process (PID=3412) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:07:20,235] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:07:20,236] {logging_mixin.py:109} INFO - [2021-09-07 17:07:20,236] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:07:20,250] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:07:21,359] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:51,868] {processor.py:162} INFO - Started process (PID=3478) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:07:51,869] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:07:51,870] {logging_mixin.py:109} INFO - [2021-09-07 17:07:51,870] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:07:51,885] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:07:52,432] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:23,344] {processor.py:162} INFO - Started process (PID=3559) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:08:23,345] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:08:23,346] {logging_mixin.py:109} INFO - [2021-09-07 17:08:23,346] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:08:23,360] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:08:23,929] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:54,796] {processor.py:162} INFO - Started process (PID=3626) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:08:54,797] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:08:54,798] {logging_mixin.py:109} INFO - [2021-09-07 17:08:54,798] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:08:54,812] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:08:56,037] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:26,279] {processor.py:162} INFO - Started process (PID=3692) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:09:26,280] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:09:26,281] {logging_mixin.py:109} INFO - [2021-09-07 17:09:26,281] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:09:26,293] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:09:27,318] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:57,391] {processor.py:162} INFO - Started process (PID=3758) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:09:57,392] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:09:57,393] {logging_mixin.py:109} INFO - [2021-09-07 17:09:57,393] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:09:57,410] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:09:58,417] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:28,628] {processor.py:162} INFO - Started process (PID=3824) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:10:28,629] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:10:28,629] {logging_mixin.py:109} INFO - [2021-09-07 17:10:28,629] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:10:28,637] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:10:29,796] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:00,681] {processor.py:162} INFO - Started process (PID=3890) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:11:00,681] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:11:00,682] {logging_mixin.py:109} INFO - [2021-09-07 17:11:00,682] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:11:00,690] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:11:01,501] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:31,869] {processor.py:162} INFO - Started process (PID=3956) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:11:31,871] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:11:31,872] {logging_mixin.py:109} INFO - [2021-09-07 17:11:31,872] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:11:31,895] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:11:33,038] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:03,347] {processor.py:162} INFO - Started process (PID=4022) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:12:03,348] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:12:03,348] {logging_mixin.py:109} INFO - [2021-09-07 17:12:03,348] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:12:03,363] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:12:04,603] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:34,675] {processor.py:162} INFO - Started process (PID=4088) to work on /usr/local/airflow/dags/writefile.py
[2021-09-07 17:12:34,677] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/writefile.py for tasks to queue
[2021-09-07 17:12:34,677] {logging_mixin.py:109} INFO - [2021-09-07 17:12:34,677] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:12:34,693] {processor.py:623} INFO - DAG(s) dict_keys(['name_writefile']) retrieved from /usr/local/airflow/dags/writefile.py
[2021-09-07 17:12:35,867] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
