[2021-09-07 10:34:52,507] {processor.py:162} INFO - Started process (PID=186) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 10:34:52,508] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 10:34:52,508] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,508] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 10:34:52,521] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 10:34:52,533] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,533] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 10:34:52,542] {logging_mixin.py:109} INFO - [2021-09-07 10:34:52,542] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 10:34:52,548] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.042 seconds
[2021-09-07 16:42:47,275] {processor.py:162} INFO - Started process (PID=186) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:42:47,275] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:42:47,276] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,276] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:42:47,293] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:42:47,307] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,307] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:42:47,317] {logging_mixin.py:109} INFO - [2021-09-07 16:42:47,317] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:42:47,323] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.053 seconds
[2021-09-07 16:43:17,958] {processor.py:162} INFO - Started process (PID=300) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:43:17,959] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:43:17,959] {logging_mixin.py:109} INFO - [2021-09-07 16:43:17,959] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:43:17,972] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:43:17,984] {logging_mixin.py:109} INFO - [2021-09-07 16:43:17,984] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:17,994] {logging_mixin.py:109} INFO - [2021-09-07 16:43:17,994] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:43:18,000] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:43:48,567] {processor.py:162} INFO - Started process (PID=366) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:43:48,567] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:43:48,568] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,568] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:43:48,581] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:43:48,593] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,593] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:43:48,602] {logging_mixin.py:109} INFO - [2021-09-07 16:43:48,602] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:43:48,609] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:44:19,167] {processor.py:162} INFO - Started process (PID=433) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:44:19,168] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:44:19,169] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,168] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:44:19,183] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:44:19,195] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,195] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:19,204] {logging_mixin.py:109} INFO - [2021-09-07 16:44:19,204] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:44:19,210] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.045 seconds
[2021-09-07 16:44:49,802] {processor.py:162} INFO - Started process (PID=499) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:44:49,803] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:44:49,803] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,803] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:44:49,816] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:44:49,828] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,828] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:44:49,837] {logging_mixin.py:109} INFO - [2021-09-07 16:44:49,837] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:44:49,843] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.043 seconds
[2021-09-07 16:45:20,418] {processor.py:162} INFO - Started process (PID=566) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:45:20,419] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:45:20,420] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,420] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:45:20,433] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:45:20,446] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,446] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:20,456] {logging_mixin.py:109} INFO - [2021-09-07 16:45:20,456] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:45:20,463] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.046 seconds
[2021-09-07 16:45:51,099] {processor.py:162} INFO - Started process (PID=633) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:45:51,099] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:45:51,100] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,100] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:45:51,113] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:45:51,126] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,126] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:45:51,135] {logging_mixin.py:109} INFO - [2021-09-07 16:45:51,135] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:45:51,144] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 16:46:21,906] {processor.py:162} INFO - Started process (PID=699) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:46:21,907] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:46:21,907] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,907] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:46:21,925] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:46:21,944] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,944] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:21,960] {logging_mixin.py:109} INFO - [2021-09-07 16:46:21,960] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:46:21,970] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.066 seconds
[2021-09-07 16:46:52,718] {processor.py:162} INFO - Started process (PID=765) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:46:52,718] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:46:52,719] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,719] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:46:52,732] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:46:52,745] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,744] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:46:52,756] {logging_mixin.py:109} INFO - [2021-09-07 16:46:52,756] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:46:52,762] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 16:47:23,321] {processor.py:162} INFO - Started process (PID=831) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:47:23,322] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:47:23,322] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,322] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:47:23,336] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:47:23,348] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,348] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:23,358] {logging_mixin.py:109} INFO - [2021-09-07 16:47:23,358] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:47:23,365] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.046 seconds
[2021-09-07 16:47:54,019] {processor.py:162} INFO - Started process (PID=897) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:47:54,020] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:47:54,020] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,020] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:47:54,034] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:47:54,049] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,048] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:47:54,061] {logging_mixin.py:109} INFO - [2021-09-07 16:47:54,061] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:47:54,068] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.050 seconds
[2021-09-07 16:48:24,645] {processor.py:162} INFO - Started process (PID=963) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:48:24,645] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:48:24,646] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,646] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:48:24,659] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:48:24,671] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,671] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:24,681] {logging_mixin.py:109} INFO - [2021-09-07 16:48:24,681] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:48:24,687] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.045 seconds
[2021-09-07 16:48:55,294] {processor.py:162} INFO - Started process (PID=1029) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:48:55,295] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:48:55,295] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,295] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:48:55,309] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:48:55,322] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,322] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:48:55,332] {logging_mixin.py:109} INFO - [2021-09-07 16:48:55,332] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:48:55,338] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.046 seconds
[2021-09-07 16:49:25,940] {processor.py:162} INFO - Started process (PID=1095) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:49:25,940] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:49:25,941] {logging_mixin.py:109} INFO - [2021-09-07 16:49:25,941] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:49:25,954] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:49:25,967] {logging_mixin.py:109} INFO - [2021-09-07 16:49:25,967] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:25,977] {logging_mixin.py:109} INFO - [2021-09-07 16:49:25,977] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:49:25,983] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.045 seconds
[2021-09-07 16:49:56,593] {processor.py:162} INFO - Started process (PID=1161) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:49:56,594] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:49:56,594] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,594] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:49:56,610] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:49:56,623] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,623] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:49:56,632] {logging_mixin.py:109} INFO - [2021-09-07 16:49:56,632] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:49:56,639] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 16:50:27,201] {processor.py:162} INFO - Started process (PID=1227) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:50:27,202] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:50:27,202] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,202] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:50:27,215] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:50:27,228] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,228] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:27,237] {logging_mixin.py:109} INFO - [2021-09-07 16:50:27,237] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:50:27,243] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:50:57,863] {processor.py:162} INFO - Started process (PID=1294) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:50:57,864] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:50:57,864] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,864] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:50:57,878] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:50:57,892] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,892] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:50:57,902] {logging_mixin.py:109} INFO - [2021-09-07 16:50:57,902] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:50:57,908] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 16:51:28,537] {processor.py:162} INFO - Started process (PID=1361) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:51:28,537] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:51:28,538] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,538] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:51:28,553] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:51:28,565] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,565] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:28,576] {logging_mixin.py:109} INFO - [2021-09-07 16:51:28,575] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:51:28,582] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 16:51:59,162] {processor.py:162} INFO - Started process (PID=1427) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:51:59,163] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:51:59,163] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,163] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:51:59,178] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:51:59,191] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,191] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:51:59,201] {logging_mixin.py:109} INFO - [2021-09-07 16:51:59,201] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:51:59,207] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 16:52:29,772] {processor.py:162} INFO - Started process (PID=1494) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:52:29,773] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:52:29,774] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,774] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:52:29,788] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:52:29,800] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,800] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:52:29,811] {logging_mixin.py:109} INFO - [2021-09-07 16:52:29,810] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:52:29,817] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 16:53:00,398] {processor.py:162} INFO - Started process (PID=1560) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:53:00,399] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:53:00,399] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,399] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:53:00,412] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:53:00,425] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,425] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:00,434] {logging_mixin.py:109} INFO - [2021-09-07 16:53:00,434] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:53:00,440] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:53:31,009] {processor.py:162} INFO - Started process (PID=1627) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:53:31,010] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:53:31,010] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,010] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:53:31,024] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:53:31,036] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,036] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:53:31,045] {logging_mixin.py:109} INFO - [2021-09-07 16:53:31,045] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:53:31,052] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:54:01,621] {processor.py:162} INFO - Started process (PID=1694) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:54:01,622] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:54:01,622] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,622] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:54:01,636] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:54:01,648] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,648] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:01,657] {logging_mixin.py:109} INFO - [2021-09-07 16:54:01,657] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:54:01,663] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.043 seconds
[2021-09-07 16:54:32,234] {processor.py:162} INFO - Started process (PID=1760) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:54:32,234] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:54:32,235] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,235] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:54:32,248] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:54:32,260] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,260] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:54:32,269] {logging_mixin.py:109} INFO - [2021-09-07 16:54:32,269] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:54:32,275] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.043 seconds
[2021-09-07 16:55:02,849] {processor.py:162} INFO - Started process (PID=1826) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:55:02,850] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:55:02,851] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,851] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:55:02,864] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:55:02,876] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,876] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:02,885] {logging_mixin.py:109} INFO - [2021-09-07 16:55:02,885] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:55:02,892] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:55:33,521] {processor.py:162} INFO - Started process (PID=1893) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:55:33,522] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:55:33,522] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,522] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:55:33,535] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:55:33,548] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,548] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:55:33,557] {logging_mixin.py:109} INFO - [2021-09-07 16:55:33,557] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:55:33,563] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:56:04,192] {processor.py:162} INFO - Started process (PID=1959) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:56:04,193] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:56:04,193] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,193] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:56:04,207] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:56:04,219] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,219] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:04,229] {logging_mixin.py:109} INFO - [2021-09-07 16:56:04,229] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:56:04,236] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.046 seconds
[2021-09-07 16:56:34,818] {processor.py:162} INFO - Started process (PID=2025) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:56:34,818] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:56:34,819] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,818] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:56:34,832] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:56:34,844] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,844] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:56:34,854] {logging_mixin.py:109} INFO - [2021-09-07 16:56:34,854] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:56:34,860] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:57:05,433] {processor.py:162} INFO - Started process (PID=2091) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:57:05,434] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:57:05,434] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,434] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:57:05,447] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:57:05,459] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,459] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:05,469] {logging_mixin.py:109} INFO - [2021-09-07 16:57:05,469] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:57:05,475] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 16:57:36,086] {processor.py:162} INFO - Started process (PID=2157) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:57:36,087] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:57:36,087] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,087] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:57:36,101] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:57:36,115] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,115] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:57:36,125] {logging_mixin.py:109} INFO - [2021-09-07 16:57:36,124] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:57:36,131] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 16:58:06,757] {processor.py:162} INFO - Started process (PID=2223) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:58:06,758] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:58:06,758] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,758] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:58:06,772] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:58:06,785] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,785] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:06,794] {logging_mixin.py:109} INFO - [2021-09-07 16:58:06,794] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:58:06,801] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.046 seconds
[2021-09-07 16:58:37,450] {processor.py:162} INFO - Started process (PID=2289) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:58:37,451] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:58:37,451] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,451] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:58:37,466] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:58:37,483] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,483] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:58:37,496] {logging_mixin.py:109} INFO - [2021-09-07 16:58:37,496] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:58:37,507] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.059 seconds
[2021-09-07 16:59:08,299] {processor.py:162} INFO - Started process (PID=2355) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:59:08,300] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:59:08,300] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,300] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:59:08,315] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:59:08,328] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,328] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:08,339] {logging_mixin.py:109} INFO - [2021-09-07 16:59:08,339] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:59:08,345] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.048 seconds
[2021-09-07 16:59:38,959] {processor.py:162} INFO - Started process (PID=2421) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:59:38,960] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 16:59:38,960] {logging_mixin.py:109} INFO - [2021-09-07 16:59:38,960] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:59:38,974] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 16:59:38,988] {logging_mixin.py:109} INFO - [2021-09-07 16:59:38,988] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 16:59:39,000] {logging_mixin.py:109} INFO - [2021-09-07 16:59:39,000] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 16:59:39,007] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.049 seconds
[2021-09-07 17:00:09,628] {processor.py:162} INFO - Started process (PID=2487) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:00:09,630] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:00:09,630] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,630] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:00:09,643] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:00:09,655] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,655] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:09,665] {logging_mixin.py:109} INFO - [2021-09-07 17:00:09,665] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:00:09,672] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.046 seconds
[2021-09-07 17:00:40,278] {processor.py:162} INFO - Started process (PID=2553) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:00:40,279] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:00:40,280] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,280] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:00:40,293] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:00:40,306] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,305] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:00:40,315] {logging_mixin.py:109} INFO - [2021-09-07 17:00:40,315] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:00:40,322] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.045 seconds
[2021-09-07 17:01:10,951] {processor.py:162} INFO - Started process (PID=2619) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:01:10,951] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:01:10,952] {logging_mixin.py:109} INFO - [2021-09-07 17:01:10,952] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:01:10,965] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:01:10,977] {logging_mixin.py:109} INFO - [2021-09-07 17:01:10,977] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:10,986] {logging_mixin.py:109} INFO - [2021-09-07 17:01:10,986] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:01:10,993] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.044 seconds
[2021-09-07 17:01:41,607] {processor.py:162} INFO - Started process (PID=2685) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:01:41,607] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:01:41,608] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,608] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:01:41,622] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:01:41,635] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,634] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:01:41,645] {logging_mixin.py:109} INFO - [2021-09-07 17:01:41,645] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:01:41,651] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.046 seconds
[2021-09-07 17:02:12,346] {processor.py:162} INFO - Started process (PID=2751) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:02:12,346] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:02:12,347] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,347] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:02:12,361] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:02:12,374] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,373] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:12,384] {logging_mixin.py:109} INFO - [2021-09-07 17:02:12,384] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:02:12,390] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.047 seconds
[2021-09-07 17:02:43,010] {processor.py:162} INFO - Started process (PID=2817) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:02:43,010] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:02:43,011] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,011] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:02:43,033] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:02:43,050] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,049] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:02:43,062] {logging_mixin.py:109} INFO - [2021-09-07 17:02:43,062] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:02:43,070] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.063 seconds
[2021-09-07 17:03:13,997] {processor.py:162} INFO - Started process (PID=2883) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:03:13,998] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:03:13,999] {logging_mixin.py:109} INFO - [2021-09-07 17:03:13,999] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:03:14,025] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:03:14,049] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,048] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:14,069] {logging_mixin.py:109} INFO - [2021-09-07 17:03:14,069] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:03:14,085] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.091 seconds
[2021-09-07 17:03:44,853] {processor.py:162} INFO - Started process (PID=2949) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:03:44,853] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:03:44,854] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,854] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:03:44,870] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:03:44,887] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,887] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:03:44,903] {logging_mixin.py:109} INFO - [2021-09-07 17:03:44,903] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:03:44,911] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.061 seconds
[2021-09-07 17:04:15,669] {processor.py:162} INFO - Started process (PID=3016) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:04:15,669] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:04:15,670] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,670] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:04:15,683] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:04:15,695] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,695] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:15,705] {logging_mixin.py:109} INFO - [2021-09-07 17:04:15,705] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:04:15,712] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.045 seconds
[2021-09-07 17:04:46,416] {processor.py:162} INFO - Started process (PID=3082) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:04:46,417] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:04:46,417] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,417] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:04:46,432] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:04:46,448] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,448] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:04:46,459] {logging_mixin.py:109} INFO - [2021-09-07 17:04:46,458] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:04:46,468] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.054 seconds
[2021-09-07 17:05:17,149] {processor.py:162} INFO - Started process (PID=3149) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:05:17,150] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:05:17,151] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,151] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:05:17,164] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:05:17,179] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,179] {dag.py:1833} INFO - Sync 1 DAGs
[2021-09-07 17:05:17,193] {logging_mixin.py:109} INFO - [2021-09-07 17:05:17,192] {dag.py:2306} INFO - Setting next_dagrun for hello_world to 2021-08-31 17:00:00+00:00
[2021-09-07 17:05:17,201] {processor.py:170} INFO - Processing /usr/local/airflow/dags/helloworld.py took 0.054 seconds
[2021-09-07 17:05:48,158] {processor.py:162} INFO - Started process (PID=3222) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:05:48,158] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:05:48,159] {logging_mixin.py:109} INFO - [2021-09-07 17:05:48,159] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:05:48,175] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:05:48,901] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:19,410] {processor.py:162} INFO - Started process (PID=3288) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:06:19,411] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:06:19,412] {logging_mixin.py:109} INFO - [2021-09-07 17:06:19,412] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:06:19,436] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:06:19,778] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:06:50,604] {processor.py:162} INFO - Started process (PID=3354) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:06:50,605] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:06:50,605] {logging_mixin.py:109} INFO - [2021-09-07 17:06:50,605] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:06:50,630] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:06:51,520] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:22,473] {processor.py:162} INFO - Started process (PID=3435) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:07:22,475] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:07:22,477] {logging_mixin.py:109} INFO - [2021-09-07 17:07:22,477] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:07:22,511] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:07:22,908] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:07:53,003] {processor.py:162} INFO - Started process (PID=3500) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:07:53,005] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:07:53,005] {logging_mixin.py:109} INFO - [2021-09-07 17:07:53,005] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:07:53,030] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:07:53,605] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:23,957] {processor.py:162} INFO - Started process (PID=3564) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:08:23,958] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:08:23,958] {logging_mixin.py:109} INFO - [2021-09-07 17:08:23,958] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:08:23,981] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:08:25,097] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:08:56,058] {processor.py:162} INFO - Started process (PID=3634) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:08:56,059] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:08:56,059] {logging_mixin.py:109} INFO - [2021-09-07 17:08:56,059] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:08:56,075] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:08:56,860] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:27,351] {processor.py:162} INFO - Started process (PID=3700) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:09:27,352] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:09:27,353] {logging_mixin.py:109} INFO - [2021-09-07 17:09:27,352] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:09:27,372] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:09:28,288] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:09:58,394] {processor.py:162} INFO - Started process (PID=3761) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:09:58,395] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:09:58,396] {logging_mixin.py:109} INFO - [2021-09-07 17:09:58,396] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:09:58,418] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:09:58,793] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:10:29,636] {processor.py:162} INFO - Started process (PID=3827) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:10:29,638] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:10:29,638] {logging_mixin.py:109} INFO - [2021-09-07 17:10:29,638] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:10:29,662] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:10:30,002] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:00,683] {processor.py:162} INFO - Started process (PID=3892) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:11:00,683] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:11:00,684] {logging_mixin.py:109} INFO - [2021-09-07 17:11:00,684] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:11:00,697] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:11:01,470] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:11:31,874] {processor.py:162} INFO - Started process (PID=3959) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:11:31,875] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:11:31,877] {logging_mixin.py:109} INFO - [2021-09-07 17:11:31,876] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:11:31,909] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:11:32,434] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:03,350] {processor.py:162} INFO - Started process (PID=4024) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:12:03,351] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:12:03,351] {logging_mixin.py:109} INFO - [2021-09-07 17:12:03,351] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:12:03,375] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:12:04,057] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-09-07 17:12:34,679] {processor.py:162} INFO - Started process (PID=4090) to work on /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:12:34,680] {processor.py:613} INFO - Processing file /usr/local/airflow/dags/helloworld.py for tasks to queue
[2021-09-07 17:12:34,680] {logging_mixin.py:109} INFO - [2021-09-07 17:12:34,680] {dagbag.py:496} INFO - Filling up the DagBag from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:12:34,703] {processor.py:623} INFO - DAG(s) dict_keys(['hello_world']) retrieved from /usr/local/airflow/dags/helloworld.py
[2021-09-07 17:12:34,902] {processor.py:173} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: FATAL:  could not open file "global/pg_filenode.map": Permission denied


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 164, in _run_file_processor
    result: Tuple[int, int] = dag_file_processor.process_file(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/dag_processing/processor.py", line 632, in process_file
    dagbag.sync_to_db()
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 70, in wrapper
    return func(*args, session=session, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 604, in sync_to_db
    for attempt in run_with_db_retries(logger=self.log):
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 390, in __iter__
    do = self.iter(retry_state=retry_state)
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 368, in iter
    raise retry_exc.reraise()
  File "/usr/local/lib/python3.8/dist-packages/tenacity/__init__.py", line 186, in reraise
    raise self.last_attempt.result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/usr/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 616, in sync_to_db
    serialize_errors.extend(_serialize_dag_capturing_errors(dag, session))
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/dagbag.py", line 587, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
  File "/usr/local/lib/python3.8/dist-packages/airflow/utils/session.py", line 67, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/airflow/models/serialized_dag.py", line 120, in write_dag
    if session.query(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3523, in scalar
    ret = self.one()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3490, in one
    ret = self.one_or_none()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3459, in one_or_none
    ret = list(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3535, in __iter__
    return self._execute_and_instances(context)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3556, in _execute_and_instances
    conn = self._get_bind_args(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3571, in _get_bind_args
    return fn(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/query.py", line 3550, in _connection_from_session
    conn = self.session.connection(**kw)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1142, in connection
    return self._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 1150, in _connection_for_bind
    return self.transaction._connection_for_bind(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/orm/session.py", line 433, in _connection_for_bind
    conn = bind._contextual_connect()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2302, in _contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 364, in connect
    return _ConnectionFairy._checkout(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/sqlalchemy/engine/default.py", line 508, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/usr/local/lib/python3.8/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) FATAL:  could not open file "global/pg_filenode.map": Permission denied

(Background on this error at: http://sqlalche.me/e/13/e3q8)
